
R Under development (unstable) (2021-09-05 r80856) -- "Unsuffered Consequences"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "restatapi"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('restatapi')
restatapi: - config file with the API version 1 loaded from GitHub (the 'current' API version number is 1).
           - 4 from the 64 cores are used for parallel computing, can be changed with 'options(restatapi_cores=...)'
           - 'auto' method will be used for file download, can be changed with 'options(restatapi_dmethod=...)'
           - the Table of contents (TOC) was not pre-loaded into the deafult cache ('.restatapi_env').
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("clean_restatapi_cache")
> ### * clean_restatapi_cache
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: clean_restatapi_cache
> ### Title: Clean restatapi cache
> ### Aliases: clean_restatapi_cache
> 
> ### ** Examples
> 
> 
> clean_restatapi_cache(verbose=TRUE) 
clean_restatapi_cache - All objects except from 'cfg', 'rav', 'cc' and 'dmethod' are removed from '.restatapi_env'.
> 
> 
> 
> 
> cleanEx()
> nameEx("create_filter_table")
> ### * create_filter_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: create_filter_table
> ### Title: Create a filter table
> ### Aliases: create_filter_table
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> cfg<-get("cfg",envir=restatapi::.restatapi_env) 
> rav<-get("rav",envir=restatapi::.restatapi_env)
> ## End(Don't show)
> dsd<-get_eurostat_dsd("avia_par_me") 
> create_filter_table(c("KYIV","hu","Quarterly"),dsd=dsd,exact_match=FALSE,ignore.case=TRUE)
     pattern concept            code
1:      KYIV AIRP_PR ME_LYTV_UA_UKBB
2:      KYIV AIRP_PR ME_LYTV_UA_UKKK
3:        hu AIRP_PR ME_LYPG_HU_LHBP
4:        hu AIRP_PR ME_LYTV_UA_UKKK
5: Quarterly    FREQ               Q
                                                              name
1:                           TIVAT airport - KYIV/BORYSPIL airport
2:                           TIVAT airport - KYIV/ZHULIANY airport
3: PODGORICA airport - BUDAPEST/LISZT FERENC INTERNATIONAL airport
4:                           TIVAT airport - KYIV/ZHULIANY airport
5:                                                       Quarterly
> create_filter_table(c("KYIV","LHBP","Monthly"),dsd=dsd,exact_match=FALSE,name=FALSE)
   pattern concept            code
1:    LHBP AIRP_PR ME_LYPG_HU_LHBP
                                                              name
1: PODGORICA airport - BUDAPEST/LISZT FERENC INTERNATIONAL airport
> create_filter_table(c("2017-03",
+                       "2001-03:2005",
+                       "<2000-07-01",
+                       2012:2014,
+                       "2018<",
+                       20912,
+                       "<3452<",
+                       ":2018-04>",
+                       "2<034v",
+                       "2008:2013"),
+                     date_filter=TRUE,
+                     verbose=TRUE)
create_filter_table - filters class: character; size: 12; filters:2017-032001-03:2005<2000-07-012012201320142018<20912<3452<:2018-04>2<034v2008:2013
create_filter_table - filters: 2017-032001-03:2005<2000-07-012012201320142018<20912<3452<:2018-04>2<034v2008:2013; is numeric: FALSE; call parents: 0
length df: 12 -*- df: 2017-03, 2001-03:2005, <2000-07-01, 2012, 2013, 2014, 2018<, 20912, <3452<, :2018-04>, 2<034v, 2008:2013
The date filter had invalid character (not 0-9, '-', '<', '>' or ':'). Those characters removed from the date filter.
create_filter_table -  2017-03, create_filter_table -  2001-03:2005, create_filter_table -  <2000-07-01, create_filter_table -  2012, create_filter_table -  2013, create_filter_table -  2014, create_filter_table -  2018<, create_filter_table -  20912, create_filter_table -  <3452<, create_filter_table -  :2018-04>, create_filter_table -  2<034, create_filter_table -  2008:2013 date filter length: 12, nchar date_filter: 7,12,11,4,4,4,5,5,6,9,5,9
Could not parse date filter: '20912' not in [<>]yyyy[-mm][-dd][<>] format or incorrect date value. The date filter is ignored.
Could not parse date filter: '<3452<'. This date filter is ignored.
Could not parse date filter: ':2018-04>'. This date filter is ignored.
Could not parse date filter: '2<034' not in [<>]yyyy[-mm][-dd][<>] format or incorrect date value. The date filter is ignored.
           sd         ed
1:          0 2000-07-01
2: 2001-03-01 2005-12-31
3: 2008-01-01 2014-12-31
4: 2017-03-01 2017-03-31
5: 2018-01-01        Inf
> 
> 
> 
> 
> cleanEx()
> nameEx("extract_data")
> ### * extract_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: extract_data
> ### Title: Extract data values from SDMX XML
> ### Aliases: extract_data
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }
> ## End(Don't show)
> 
> 
> 
> 
> cleanEx()
> nameEx("extract_dsd")
> ### * extract_dsd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: extract_dsd
> ### Title: Extract the Data Structure Definition content from SDMX XML
> ### Aliases: extract_dsd
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> dsd_url<-"https://ec.europa.eu/eurostat/SDMX/diss-web/rest/datastructure/ESTAT/DSD_nama_10_a10_e"
> tryCatch({
+   dsd_xml<-xml2::read_xml(dsd_url)}, 
+   error=function(e){
+   message("Unable to download the xml file.\n",e)}, 
+   warning=function(w){
+   message("Unable to download the xml file.\n",w)}) 
> if (exists("dsd_xml")) {extract_dsd("GEO",dsd_xml)} 
      concept xml_clc    
 [1,] "GEO"   "EU27_2020"
 [2,] "GEO"   "EU28"     
 [3,] "GEO"   "EU15"     
 [4,] "GEO"   "EA"       
 [5,] "GEO"   "EA19"     
 [6,] "GEO"   "EA12"     
 [7,] "GEO"   "BE"       
 [8,] "GEO"   "BG"       
 [9,] "GEO"   "CZ"       
[10,] "GEO"   "DK"       
[11,] "GEO"   "DE"       
[12,] "GEO"   "EE"       
[13,] "GEO"   "IE"       
[14,] "GEO"   "EL"       
[15,] "GEO"   "ES"       
[16,] "GEO"   "FR"       
[17,] "GEO"   "HR"       
[18,] "GEO"   "IT"       
[19,] "GEO"   "CY"       
[20,] "GEO"   "LV"       
[21,] "GEO"   "LT"       
[22,] "GEO"   "LU"       
[23,] "GEO"   "HU"       
[24,] "GEO"   "MT"       
[25,] "GEO"   "NL"       
[26,] "GEO"   "AT"       
[27,] "GEO"   "PL"       
[28,] "GEO"   "PT"       
[29,] "GEO"   "RO"       
[30,] "GEO"   "SI"       
[31,] "GEO"   "SK"       
[32,] "GEO"   "FI"       
[33,] "GEO"   "SE"       
[34,] "GEO"   "IS"       
[35,] "GEO"   "LI"       
[36,] "GEO"   "NO"       
[37,] "GEO"   "CH"       
[38,] "GEO"   "UK"       
[39,] "GEO"   "ME"       
[40,] "GEO"   "MK"       
[41,] "GEO"   "RS"       
[42,] "GEO"   "XK"       
      xml_cln                                                                                             
 [1,] "European Union - 27 countries (from 2020)"                                                         
 [2,] "European Union - 28 countries (2013-2020)"                                                         
 [3,] "European Union - 15 countries (1995-2004)"                                                         
 [4,] "Euro area (EA11-1999, EA12-2001, EA13-2007, EA15-2008, EA16-2009, EA17-2011, EA18-2014, EA19-2015)"
 [5,] "Euro area - 19 countries  (from 2015)"                                                             
 [6,] "Euro area - 12 countries (2001-2006)"                                                              
 [7,] "Belgium"                                                                                           
 [8,] "Bulgaria"                                                                                          
 [9,] "Czechia"                                                                                           
[10,] "Denmark"                                                                                           
[11,] "Germany (until 1990 former territory of the FRG)"                                                  
[12,] "Estonia"                                                                                           
[13,] "Ireland"                                                                                           
[14,] "Greece"                                                                                            
[15,] "Spain"                                                                                             
[16,] "France"                                                                                            
[17,] "Croatia"                                                                                           
[18,] "Italy"                                                                                             
[19,] "Cyprus"                                                                                            
[20,] "Latvia"                                                                                            
[21,] "Lithuania"                                                                                         
[22,] "Luxembourg"                                                                                        
[23,] "Hungary"                                                                                           
[24,] "Malta"                                                                                             
[25,] "Netherlands"                                                                                       
[26,] "Austria"                                                                                           
[27,] "Poland"                                                                                            
[28,] "Portugal"                                                                                          
[29,] "Romania"                                                                                           
[30,] "Slovenia"                                                                                          
[31,] "Slovakia"                                                                                          
[32,] "Finland"                                                                                           
[33,] "Sweden"                                                                                            
[34,] "Iceland"                                                                                           
[35,] "Liechtenstein"                                                                                     
[36,] "Norway"                                                                                            
[37,] "Switzerland"                                                                                       
[38,] "United Kingdom"                                                                                    
[39,] "Montenegro"                                                                                        
[40,] "North Macedonia"                                                                                   
[41,] "Serbia"                                                                                            
[42,] "Kosovo (under United Nations Security Council Resolution 1244/99)"                                 
> 
> 
> 
> 
> cleanEx()
> nameEx("extract_toc")
> ### * extract_toc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: extract_toc
> ### Title: Extract the text of the table of contents from SDMX XML
> ### Aliases: extract_toc
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> cfg<-get("cfg",envir=restatapi::.restatapi_env) 
> rav<-get("rav",envir=restatapi::.restatapi_env)
> toc_endpoint<-eval(parse(text=paste0("cfg$TOC_ENDPOINT$'",rav,"'$ESTAT$xml")))
> 
> 
> 
> 
> cleanEx()
> nameEx("filter_raw_data")
> ### * filter_raw_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: filter_raw_data
> ### Title: Filter raw data locally
> ### Aliases: filter_raw_data
> 
> ### ** Examples
> 
> ## Don't show: 
> 
> ## End(Don't show)
> 
> 
> 
> 
> cleanEx()
> nameEx("get_compressed_sdmx")
> ### * get_compressed_sdmx
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_compressed_sdmx
> ### Title: Download and extract compressed SDMX XML
> ### Aliases: get_compressed_sdmx
> 
> ### ** Examples
> 
> base_url<-"https://ec.europa.eu/eurostat/"
> url_end<-"estat-navtree-portlet-prod/BulkDownloadListing?file=data/agr_r_milkpr.sdmx.zip"
> url<-paste0(base_url,url_end)
> sdmx_xml<-get_compressed_sdmx(url,verbose=TRUE)
trying URL 'https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?file=data/agr_r_milkpr.sdmx.zip'
Content type 'application/octet-stream;charset=UTF-8' length 81311 bytes (79 KB)
==================================================
downloaded 79 KB

> 
> 
> 
> 
> cleanEx()
> nameEx("get_eurostat_bulk")
> ### * get_eurostat_bulk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_eurostat_bulk
> ### Title: Get Eurostat data in a standardized format
> ### Aliases: get_eurostat_bulk
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("get_eurostat_cache")
> ### * get_eurostat_cache
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_eurostat_cache
> ### Title: Load an object from cache
> ### Aliases: get_eurostat_cache
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> dt<-data.frame(txt=c("a","b","c"),nr=c(1,2,3))
> put_eurostat_cache(dt,"teszt")
[1] "in memory ('teszt' in '.restatapi_env')"
> get_eurostat_cache("teszt",verbose=TRUE)
get_eurostat_cache - The 'teszt' was loaded from 'teszt' in '.restatapi_env'.
  txt nr
1   a  1
2   b  2
3   c  3
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("get_eurostat_data")
> ### * get_eurostat_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_eurostat_data
> ### Title: Download, extract and filter Eurostat data
> ### Aliases: get_eurostat_data
> 
> ### ** Examples
> 
> load_cfg()
> eu<-get("cc",envir=restatapi::.restatapi_env)
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("get_eurostat_dsd")
> ### * get_eurostat_dsd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_eurostat_dsd
> ### Title: Download the Data Structure Definition of a dataset
> ### Aliases: get_eurostat_dsd
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }
> ## End(Don't show)
> dsd<-get_eurostat_dsd("nama_10_gdp",cache=FALSE,verbose=TRUE)
get_eurostat_dsd - Trying to download the DSD from: http://ec.europa.eu/eurostat/SDMX/diss-web/rest/datastructure/ESTAT/DSD_nama_10_gdp
trying URL 'http://ec.europa.eu/eurostat/SDMX/diss-web/rest/datastructure/ESTAT/DSD_nama_10_gdp'
downloaded 37 KB

Trying to extract the DSD from: /var/scratch2/tomas/tmp/RtmpBRZ2oH/file136da6ed33c5b
> head(dsd)
  concept code        name
1    FREQ    D       Daily
2    FREQ    W      Weekly
3    FREQ    Q   Quarterly
4    FREQ    A      Annual
5    FREQ    S Semi-annual
6    FREQ    M     Monthly
> 
> 
> 
> 
> cleanEx()
> nameEx("get_eurostat_raw")
> ### * get_eurostat_raw
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_eurostat_raw
> ### Title: Get Eurostat data as it is
> ### Aliases: get_eurostat_raw
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("get_eurostat_toc")
> ### * get_eurostat_toc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_eurostat_toc
> ### Title: Download the Table of Contents of Eurostat datasets
> ### Aliases: get_eurostat_toc
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("load_cfg")
> ### * load_cfg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: load_cfg
> ### Title: Load configuration data from JSON
> ### Aliases: load_cfg
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("put_eurostat_cache")
> ### * put_eurostat_cache
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: put_eurostat_cache
> ### Title: Put an object to cache
> ### Aliases: put_eurostat_cache
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> options(restatapi_cache_dir=NULL)
> ## End(Don't show)
> dt<-data.frame(txt=c("a","b","c"),nr=c(1,2,3))
> put_eurostat_cache(dt,"teszt")
[1] "previously in memory ('teszt' in '.restatapi_env'). It remained unchanged"
> get("teszt",envir=restatapi::.restatapi_env)
  txt nr
1   a  1
2   b  2
3   c  3
> put_eurostat_cache(dt,"teszt",cache_dir=tempdir())
[1] "in the file /var/scratch2/tomas/tmp/RtmpBRZ2oH/teszt.rds"
> readRDS(file.path(tempdir(),"teszt.rds"))
  txt nr
1   a  1
2   b  2
3   c  3
> clean_restatapi_cache(cache_dir=tempdir())
> 
> 
> 
> 
> cleanEx()
> nameEx("search_eurostat_dsd")
> ### * search_eurostat_dsd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: search_eurostat_dsd
> ### Title: Search for pattern in the Data Structure Definition of a dataset
> ### Aliases: search_eurostat_dsd
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> cfg<-get("cfg",envir=restatapi::.restatapi_env) 
> rav<-get("rav",envir=restatapi::.restatapi_env)
> ## End(Don't show)
> dsd_example<-get_eurostat_dsd("nama_10_gdp",verbose=TRUE)
get_eurostat_dsd - Trying to download the DSD from: http://ec.europa.eu/eurostat/SDMX/diss-web/rest/datastructure/ESTAT/DSD_nama_10_gdp
trying URL 'http://ec.europa.eu/eurostat/SDMX/diss-web/rest/datastructure/ESTAT/DSD_nama_10_gdp'
downloaded 37 KB

Trying to extract the DSD from: /var/scratch2/tomas/tmp/RtmpBRZ2oH/file136da629fdf4ea
get_eurostat_dsd - The DSD of the nama_10_gdp dataset was cached in memory ('nama_10_gdp.dsd' in '.restatapi_env').

> search_eurostat_dsd("EU",dsd_example)
   pattern concept                 code
12      EU    UNIT PC_EU27_2020_MEUR_CP
13      EU    UNIT      PC_EU28_MEUR_CP
14      EU    UNIT PC_EU27_2020_MPPS_CP
15      EU    UNIT      PC_EU28_MPPS_CP
16      EU    UNIT              CP_MEUR
19      EU    UNIT    CP_MPPS_EU27_2020
20      EU    UNIT           CLV15_MEUR
21      EU    UNIT           CLV10_MEUR
22      EU    UNIT           CLV05_MEUR
27      EU    UNIT             PYP_MEUR
30      EU    UNIT             PD15_EUR
31      EU    UNIT             PD10_EUR
32      EU    UNIT             PD05_EUR
36      EU    UNIT       PD_PCH_PRE_EUR
77      EU     GEO            EU27_2020
78      EU     GEO                 EU28
79      EU     GEO                 EU15
                                                                                                 name
12                       Percentage of EU27 (from 2020) total (based on million euro), current prices
13                       Percentage of EU28 (2013-2020) total (based on million euro), current prices
14 Percentage of EU27 (from 2020) total (based on million purchasing power standards), current prices
15 Percentage of EU28 (2013-2020) total (based on million purchasing power standards), current prices
16                                                                       Current prices, million euro
19                           Current prices, million purchasing power standards (PPS, EU27 from 2020)
20                                                          Chain linked volumes (2015), million euro
21                                                          Chain linked volumes (2010), million euro
22                                                          Chain linked volumes (2005), million euro
27                                                                 Previous year prices, million euro
30                                                    Price index (implicit deflator), 2015=100, euro
31                                                    Price index (implicit deflator), 2010=100, euro
32                                                    Price index (implicit deflator), 2005=100, euro
36                        Price index (implicit deflator), percentage change on previous period, euro
77                                                          European Union - 27 countries (from 2020)
78                                                          European Union - 28 countries (2013-2020)
79                                                          European Union - 15 countries (1995-2004)
> search_eurostat_dsd("EU",dsd_example,ignore.case=TRUE)
    pattern  concept                 code
12       EU     UNIT PC_EU27_2020_MEUR_CP
13       EU     UNIT      PC_EU28_MEUR_CP
14       EU     UNIT PC_EU27_2020_MPPS_CP
15       EU     UNIT      PC_EU28_MPPS_CP
16       EU     UNIT              CP_MEUR
19       EU     UNIT    CP_MPPS_EU27_2020
20       EU     UNIT           CLV15_MEUR
21       EU     UNIT           CLV10_MEUR
22       EU     UNIT           CLV05_MEUR
27       EU     UNIT             PYP_MEUR
30       EU     UNIT             PD15_EUR
31       EU     UNIT             PD10_EUR
32       EU     UNIT             PD05_EUR
36       EU     UNIT       PD_PCH_PRE_EUR
77       EU      GEO            EU27_2020
78       EU      GEO                 EU28
79       EU      GEO                 EU15
80       EU      GEO                   EA
81       EU      GEO                 EA19
82       EU      GEO                 EA12
126      EU OBS_FLAG                    s
                                                                                                  name
12                        Percentage of EU27 (from 2020) total (based on million euro), current prices
13                        Percentage of EU28 (2013-2020) total (based on million euro), current prices
14  Percentage of EU27 (from 2020) total (based on million purchasing power standards), current prices
15  Percentage of EU28 (2013-2020) total (based on million purchasing power standards), current prices
16                                                                        Current prices, million euro
19                            Current prices, million purchasing power standards (PPS, EU27 from 2020)
20                                                           Chain linked volumes (2015), million euro
21                                                           Chain linked volumes (2010), million euro
22                                                           Chain linked volumes (2005), million euro
27                                                                  Previous year prices, million euro
30                                                     Price index (implicit deflator), 2015=100, euro
31                                                     Price index (implicit deflator), 2010=100, euro
32                                                     Price index (implicit deflator), 2005=100, euro
36                         Price index (implicit deflator), percentage change on previous period, euro
77                                                           European Union - 27 countries (from 2020)
78                                                           European Union - 28 countries (2013-2020)
79                                                           European Union - 15 countries (1995-2004)
80  Euro area (EA11-1999, EA12-2001, EA13-2007, EA15-2008, EA16-2009, EA17-2011, EA18-2014, EA19-2015)
81                                                               Euro area - 19 countries  (from 2015)
82                                                                Euro area - 12 countries (2001-2006)
126                                                                     Eurostat estimate (phased out)
> search_eurostat_dsd("EU27_2019",dsd_example,name=FALSE)
NULL
> search_eurostat_dsd("EU27_2019",dsd_example,exact_match=TRUE)
NULL
> 
> 
> 
> 
> cleanEx()
> nameEx("search_eurostat_toc")
> ### * search_eurostat_toc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: search_eurostat_toc
> ### Title: Search for pattern in the titles, units and short description of
> ###   the TOC
> ### Aliases: search_eurostat_toc
> 
> ### ** Examples
> 
> ## Don't show: 
> if (parallel::detectCores()<=2){
+    options(restatapi_cores=1)
+ }else{
+    options(restatapi_cores=2)
+ }    
> ## End(Don't show)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.885 0.184 6.158 0.13 0.348 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
