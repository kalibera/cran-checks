Package OpenMx version 2.19.8
Package built using 80923/R 4.2.0; x86_64-pc-linux-gnu; 2021-09-18 22:00:28 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 11.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function BA81Expect::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxExpectationBA81.cpp:416

Function ComputeBootstrap::computeImpl(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:4163

Function ComputeBootstrap::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:4038

Function ComputeCI::computeImpl(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1396

Function ComputeCI::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:570

Function ComputeCI::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1447

Function ComputeCheckpoint::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:5572

Function ComputeEM::MengRubinFamily(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3233

Function ComputeEM::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2749

Function ComputeEM::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3288

Function ComputeGenSA::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1806

Function ComputeLoop::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2507

Function ComputeNR::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeNR.cpp:325

Function ComputeReportDeriv::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3946

Function ComputeReportExpectation::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3967

Function ComputeStandardError::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3779

Function ComputeTryCatch::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2335

Function ComputeTryH::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1505

Function MLFitState::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxMLFitFunction.cpp:315

Function MxRList::add(char const*, SEXPREC*)
  [UP] ignoring variable rkey as it has address taken, results will be incomplete 
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:505

Function MxRList::asR()
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:339

Function ProtectAutoBalanceDoodad::~ProtectAutoBalanceDoodad()
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete OpenMx/src/./omxDefines.h:564
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete OpenMx/src/./omxDefines.h:564

Function ProtectedSEXP::ProtectedSEXP(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:535

Function ProtectedSEXP::~ProtectedSEXP()
  [PB] has negative depth OpenMx/src/./omxDefines.h:541
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete OpenMx/src/./omxDefines.h:541
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:542

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::hasSlot(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
  [UP] calling allocating function R_has_slot(?,V) with argument allocated using Rf_mkString Rcpp/include/Rcpp/proxy/SlotProxy.h:97

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function RelationalRAMExpectation::independentGroup::exportInternalState(MxRList&, MxRList&)
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:2424

Function RelationalRAMExpectation::independentGroup::prep(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:1672

Function RelationalRAMExpectation::state::exportInternalState(MxRList&)
  [UP] ignoring variable fk1 as it has address taken, results will be incomplete 
  [UP] ignoring variable hmean as it has address taken, results will be incomplete 
  [UP] ignoring variable numJoins as it has address taken, results will be incomplete 
  [UP] ignoring variable parent1 as it has address taken, results will be incomplete 
  [UP] ignoring variable qrf as it has address taken, results will be incomplete 
  [UP] ignoring variable rscale as it has address taken, results will be incomplete 
  [UP] ignoring variable rset as it has address taken, results will be incomplete 
  [UP] ignoring variable skipMean as it has address taken, results will be incomplete 
  [UP] ignoring variable ugroup as it has address taken, results will be incomplete 
  [UP] ignoring variable numKids as it has address taken, results will be incomplete 
  [UP] ignoring variable row as it has address taken, results will be incomplete 
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:2485

Function RelationalRAMExpectation::state::simulate(FitContext*, MxRList&)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:2200

Function ScopedProtect::ScopedProtect(SEXPREC*&, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:516

Function ScopedProtect::~ScopedProtect()
  [PB] has negative depth OpenMx/src/./omxDefines.h:522
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete OpenMx/src/./omxDefines.h:522
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:523

Function makeFactor(SEXPREC*, int, char const**)
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:94

Function omxBackend2(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, bool)
  [UP] unprotected variable Rlb while calling allocating function Rf_allocVector OpenMx/src/glue.cpp:747
  [UP] unprotected variable Rlb while calling allocating function MxRList::add(char const*, SEXPREC*)(?,?,V) OpenMx/src/glue.cpp:748
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:792

Function omxCallAlgebra2(SEXPREC*, SEXPREC*, SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:546

Function omxComputeGD::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:471

Function omxComputeIterate::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2404

Function omxComputeNM::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeNM.cpp:500

Function omxComputeNumericDeriv::computeImpl(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/omxHessianCalculation.cpp:533

Function omxComputeNumericDeriv::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxHessianCalculation.cpp:338

Function omxComputeNumericDeriv::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/omxHessianCalculation.cpp:553

Function omxComputeOnce::initFromFrontend(omxState*, SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3421

Function omxComputeSequence::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2303

Function omxData::connectDynamicData(omxState*)
  [PB] has possible protection stack imbalance OpenMx/src/omxData.cpp:142

Function omxExportMatrix(omxMatrix*)
  [PB] has possible protection stack imbalance OpenMx/src/omxMatrix.cpp:239

Function omxFIMLFitFunction::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxFIMLFitFunction.cpp:457

Function omxGlobal::omxProcessConfidenceIntervals(SEXPREC*, omxState*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unprotected variable names while calling allocating function Rf_asChar OpenMx/src/omxImportFrontendState.cpp:404
  [UP] unprotected variable names while calling allocating function Rf_asInteger OpenMx/src/omxImportFrontendState.cpp:405
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:418

Function omxGlobal::omxProcessMxComputeEntities(SEXPREC*, omxState*)
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:196

Function omxProcessCheckpointOptions(SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:312

Function omxState::omxExportResults(MxRList*, FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/omxExportBackendState.cpp:79

Function omxState::omxProcessConstraints(SEXPREC*, FitContext*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unprotected variable names while calling allocating function omxMatrixLookupFromState1(SEXPREC*, omxState*) OpenMx/src/omxImportFrontendState.cpp:432
  [UP] unprotected variable names while calling allocating function omxMatrixLookupFromState1(SEXPREC*, omxState*) OpenMx/src/omxImportFrontendState.cpp:434
  [UP] unprotected variable names while calling allocating function Rf_asChar OpenMx/src/omxImportFrontendState.cpp:436
  [UP] unprotected variable names while calling allocating function Rf_warning OpenMx/src/omxImportFrontendState.cpp:439
  [UP] unprotected variable names while calling allocating function omxMatrixLookupFromState1(SEXPREC*, omxState*) OpenMx/src/omxImportFrontendState.cpp:443
  [UP] unprotected variable names while calling allocating function int Rcpp::as<int>(SEXPREC*) OpenMx/src/omxImportFrontendState.cpp:446
  [UP] unprotected variable names while calling allocating function Rf_asInteger OpenMx/src/omxImportFrontendState.cpp:447
  [UP] unprotected variable names while calling allocating function bool Rcpp::as<bool>(SEXPREC*) OpenMx/src/omxImportFrontendState.cpp:448
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:454

Function omxState::omxProcessMxExpectationEntities(SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:167

Function omxState::reportConstraints(MxRList&)
  [PB] has possible protection stack imbalance OpenMx/src/omxState.cpp:577

Function omxStateSpaceExpectation::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxStateSpaceExpectation.cpp:443

Function omxWLSFitFunction::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxWLSFitFunction.cpp:197

Function readOpts(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:482

Function sparseInvert_wrapper(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:406

Function ssMLFitState::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ssMLFit.cpp:59
