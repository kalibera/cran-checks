Package isotree version 0.6.1-4
Package built using 87687/R 4.5.0; x86_64-pc-linux-gnu; 2025-02-05 23:01:26 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:682

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function _isotree_R_has_openmp
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_assign_csc_cols
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_call_take_cols_by_index_csc
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_call_take_cols_by_index_csr
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_call_take_cols_by_slice_csc
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_call_take_cols_by_slice_csr
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_check_node_indexer_has_distances
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_check_node_indexer_has_references
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_check_null_ptr_model_internal
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_compare_pointers
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_copy_cpp_objects
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_deepcopy_int
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_deepcopy_vector
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_deserialize_ExtIsoForest
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_deserialize_Imputer
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_deserialize_Indexer
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_deserialize_IsoForest
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_deserialize_from_file
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_fit_model
  [UP] ignoring variable <unnamed var:   %167 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_get_empty_int_mat
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_get_empty_tmat
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_get_n_nodes
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_get_ntrees
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_get_null_R_pointer_internal
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_get_null_int_mat
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_get_num_references
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_impute_iso
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_model_to_graphviz
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_model_to_json
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_model_to_sql
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_model_to_sql_with_select_from
  [UP] ignoring variable <unnamed var:   %32 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_serialize_ExtIsoForest_from_ptr
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_serialize_Imputer_from_ptr
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_serialize_Indexer_from_ptr
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_serialize_IsoForest_from_ptr
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _isotree_subset_trees
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function assign_csc_cols(Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, unsigned long)
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:3010
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:3011
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:3012

Function build_tree_indices(Rcpp::Vector<19, Rcpp::PreserveStorage>, SEXPREC*, bool, bool, bool, int)
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2137
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2142

Function call_take_cols_by_index_csr(Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, bool)
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2790
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2791
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2792

Function copy_cpp_objects(SEXPREC*, bool, SEXPREC*, SEXPREC*, bool)
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2070
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2073
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2077
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2080
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2084
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2087
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2094
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2098
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2102
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2106

Function deserialize_from_file(Rcpp::Vector<16, Rcpp::PreserveStorage>, bool)
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2435
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2469
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2471
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2474
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2476
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2479
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2481
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2502
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2506
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2510
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:2514

Function drop_reference_points(bool, SEXPREC*, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Vector<19, Rcpp::PreserveStorage>)
  [PB] has possible protection stack imbalance isotree/src/Rwrapper.cpp:1499

Function fit_model(Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<14, Rcpp::PreserveStorage>, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, Rcpp::Vector<16, Rcpp::PreserveStorage>, bool, bool, bool, unsigned long, unsigned long, unsigned long, unsigned long, bool, bool, bool, Rcpp::Vector<16, Rcpp::PreserveStorage>, bool, bool, bool, bool, bool, bool, bool, double, double, double, double, double, double, double, double, Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Vector<16, Rcpp::PreserveStorage>, bool, bool, bool, unsigned long, Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Vector<16, Rcpp::PreserveStorage>, int, bool, int, bool)
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using get_altrepped_null_pointer() isotree/src/Rwrapper.cpp:683
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:752
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:755
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:759
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:762
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:782
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:786
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:800
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:813

Function subset_trees(SEXPREC*, SEXPREC*, SEXPREC*, bool, bool, Rcpp::Vector<13, Rcpp::PreserveStorage>)
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:1596
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using Rcpp::unwindProtect(SEXPREC* (*)(void*), void*) isotree/src/Rwrapper.cpp:1601

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
