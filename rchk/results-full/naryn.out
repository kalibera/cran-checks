Package naryn version 2.6.30
Package built using 87358/R 4.5.0; x86_64-pc-linux-gnu; 2024-11-21 18:02:21 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function BinsManager::set_dims(SEXPREC*, SEXPREC*, SEXPREC*) const
  [UP] ignoring variable breaks as it has address taken, results will be incomplete 
  [UP] ignoring variable dimname as it has address taken, results will be incomplete 

Function C_emr_annotate
  [UP] ignoring variable ranswer as it has address taken, results will be incomplete 
  [UP] ignoring variable rcolnames as it has address taken, results will be incomplete 
  [UP] ignoring variable rrownames as it has address taken, results will be incomplete 

Function C_emr_date2time
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function C_emr_dist
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable breaks as it has address taken, results will be incomplete 
  [UP] ignoring variable dim as it has address taken, results will be incomplete 
  [UP] ignoring variable dimnames as it has address taken, results will be incomplete 

Function C_emr_extract
  [UP] ignoring variable rexpr_idx as it has address taken, results will be incomplete 
  [UP] ignoring variable rexpr_vals as it has address taken, results will be incomplete 
  [UP] ignoring variable rexprs as it has address taken, results will be incomplete 
  [UP] unprotected variable col_names while calling allocating function Rf_mkChar naryn/src/NRExtract.cpp:89
  [UP] unprotected variable col_names while calling allocating function Rf_mkChar naryn/src/NRExtract.cpp:124

Function C_emr_quantiles
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable colnames as it has address taken, results will be incomplete 

Function C_emr_summary
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable colnames as it has address taken, results will be incomplete 

Function C_emr_time2dayofmonth
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function C_emr_time2hour
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function C_emr_time2month
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function C_emr_time2year
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function EMRLogicalTrack::vtrack() const
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable column_names as it has address taken, results will be incomplete 
  [UP] ignoring variable keepref as it has address taken, results will be incomplete 
  [UP] ignoring variable params as it has address taken, results will be incomplete 
  [UP] ignoring variable source as it has address taken, results will be incomplete 

Function NRIteratorFilter::create_filter_item(std::__1::vector<SEXPREC*, std::__1::allocator<SEXPREC*> >&, std::__1::vector<SEXPREC*, std::__1::allocator<SEXPREC*> >&, char const*, bool, unsigned int, unsigned int)
  [UP] allocating function NRPoint::convert_rpoints(SEXPREC*, std::__1::vector<EMRPoint, std::__1::allocator<EMRPoint> >*, char const*) may destroy its unprotected argument (rval <arg 1>), which is later used. naryn/src/NRIteratorFilter.cpp:191
  [UP] calling allocating function NRPoint::convert_rpoints(SEXPREC*, std::__1::vector<EMRPoint, std::__1::allocator<EMRPoint> >*, char const*) with a fresh pointer (rval <arg 1>) naryn/src/NRIteratorFilter.cpp:191
  [UP] allocating function NRIdTimeIntervals::convert_rid_time_intervals(SEXPREC*, EMRIdTimeIntervals*, char const*) may destroy its unprotected argument (rval <arg 1>), which is later used. naryn/src/NRIteratorFilter.cpp:209
  [UP] calling allocating function NRIdTimeIntervals::convert_rid_time_intervals(SEXPREC*, EMRIdTimeIntervals*, char const*) with a fresh pointer (rval <arg 1>) naryn/src/NRIteratorFilter.cpp:209
  [UP] unprotected variable rval while calling allocating function EMRIdTimeIntervalsIterator::EMRIdTimeIntervalsIterator(EMRIdTimeIntervals const&, bool, unsigned int, unsigned int) naryn/src/NRIteratorFilter.cpp:218
  [UP] allocating function NRPoint::convert_rids(SEXPREC*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*, char const*) may destroy its unprotected argument (rval <arg 1>), which is later used. naryn/src/NRIteratorFilter.cpp:227
  [UP] calling allocating function NRPoint::convert_rids(SEXPREC*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*, char const*) with a fresh pointer (rval <arg 1>) naryn/src/NRIteratorFilter.cpp:227
  [UP] calling allocating function NRTimeIntervals::convert_rtime_intervals(SEXPREC*, EMRTimeIntervals*, char const*) with a fresh pointer (rval <arg 1>) naryn/src/NRIteratorFilter.cpp:245

Function NRIteratorFilter::init(SEXPREC*, unsigned int, unsigned int)
  [UP] ignoring variable filter_names as it has address taken, results will be incomplete 
  [UP] calling allocating function Rf_findVar(S:EMR_FILTERS,?) with argument allocated using Rf_findVar(S:.naryn,?) naryn/src/NRIteratorFilter.cpp:21

Function NRPoint::convert_ids(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, unsigned int, bool)
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rids as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 

Function NRPoint::convert_points(std::__1::vector<EMRPoint, std::__1::allocator<EMRPoint> > const&, unsigned int, bool, bool, std::__1::vector<EMRPoint*, std::__1::allocator<EMRPoint*> >*)
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable ids as it has address taken, results will be incomplete 
  [UP] ignoring variable refs as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable times as it has address taken, results will be incomplete 

Function NRTrackExprScanner::begin(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, NRTrackExprScanner::ValType, unsigned int, unsigned int, bool, SEXPREC*, bool, SEXPREC*)
  [UP] ignoring variable res as it has address taken, results will be incomplete 

Function NRTrackExprScanner::check(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, unsigned int, unsigned int, bool, SEXPREC*, bool, SEXPREC*)
  [UP] ignoring variable expr as it has address taken, results will be incomplete 
  [UP] ignoring variable parsed_expr as it has address taken, results will be incomplete 

Function NRTrackExprScanner::create_expr_iterator(NRTrackExprScanner::IteratorWithFilter*, SEXPREC*, bool, NRTrackExpressionVars const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, unsigned int, unsigned int, bool, SEXPREC*, bool)
  [UP] ignoring variable ltrack_name as it has address taken, results will be incomplete 

Function NRTrackExprScanner::create_logical_track_filter(SEXPREC*, SEXPREC*) const
  [UP] unprotected variable e while calling allocating function Rf_install naryn/src/NRTrackExpressionScanner.cpp:518

Function NRTrackExprScanner::define_r_vars(unsigned int)
  [UP] unprotected variable env while calling allocating function Rf_install naryn/src/NRTrackExpressionScanner.cpp:113

Function NRTrackExprScanner::eval_next()
  [UP] unprotected variable env while calling allocating function Rf_install naryn/src/./NRTrackExpressionScanner.h:244
  [UP] unprotected variable env while calling allocating function Rf_install naryn/src/./NRTrackExpressionScanner.h:252

Function emr_covariance
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable breaks as it has address taken, results will be incomplete 
  [UP] ignoring variable dim as it has address taken, results will be incomplete 
  [UP] ignoring variable dimnames as it has address taken, results will be incomplete 
  [UP] ignoring variable stat_names as it has address taken, results will be incomplete 

Function emr_db_subset_info
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable complementary as it has address taken, results will be incomplete 
  [UP] ignoring variable fraction as it has address taken, results will be incomplete 
  [UP] ignoring variable names as it has address taken, results will be incomplete 
  [UP] ignoring variable src as it has address taken, results will be incomplete 

Function emr_expr_logical_tracks
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_expr_physical_tracks
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_expr_virtual_tracks
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable vtracknames as it has address taken, results will be incomplete 
  [UP] calling allocating function Rf_findVar(S:EMR_VTRACKS,?) with argument allocated using Rf_findVar(S:.naryn,?) naryn/src/NRLogicalTrack.cpp:333

Function emr_get_tracks_attrs
  [UP] ignoring variable ranswer as it has address taken, results will be incomplete 
  [UP] ignoring variable rattrs as it has address taken, results will be incomplete 
  [UP] ignoring variable rcol_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rrow_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rtracks as it has address taken, results will be incomplete 
  [UP] ignoring variable rvals as it has address taken, results will be incomplete 

Function emr_ids_dist
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_ids_dist_with_iterator
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable riterator as it has address taken, results will be incomplete 

Function emr_ids_vals_dist
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable rcounts as it has address taken, results will be incomplete 
  [UP] ignoring variable riterator as it has address taken, results will be incomplete 
  [UP] ignoring variable rtracks_idx as it has address taken, results will be incomplete 
  [UP] ignoring variable rvals as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rtracks as it has address taken, results will be incomplete 

Function emr_logical_track_exists
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_logical_track_info
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable names as it has address taken, results will be incomplete 
  [UP] ignoring variable rsource as it has address taken, results will be incomplete 
  [UP] ignoring variable rvalues as it has address taken, results will be incomplete 

Function emr_logical_track_names
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_logical_track_user_info
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable names as it has address taken, results will be incomplete 
  [UP] ignoring variable rcategorical as it has address taken, results will be incomplete 
  [UP] ignoring variable rdata_type as it has address taken, results will be incomplete 
  [UP] ignoring variable rmax_id as it has address taken, results will be incomplete 
  [UP] ignoring variable rmax_time as it has address taken, results will be incomplete 
  [UP] ignoring variable rmax_val as it has address taken, results will be incomplete 
  [UP] ignoring variable rmin_id as it has address taken, results will be incomplete 
  [UP] ignoring variable rmin_time as it has address taken, results will be incomplete 
  [UP] ignoring variable rmin_val as it has address taken, results will be incomplete 
  [UP] ignoring variable rnum_unique_vals as it has address taken, results will be incomplete 
  [UP] ignoring variable rnum_vals as it has address taken, results will be incomplete 
  [UP] ignoring variable rpath as it has address taken, results will be incomplete 
  [UP] ignoring variable rtype as it has address taken, results will be incomplete 

Function emr_ltrack_dependencies
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_track_db
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_track_db_names
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_track_dbs
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_track_exists
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_track_info
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable names as it has address taken, results will be incomplete 
  [UP] ignoring variable rcategorical as it has address taken, results will be incomplete 
  [UP] ignoring variable rdata_type as it has address taken, results will be incomplete 
  [UP] ignoring variable rmax_id as it has address taken, results will be incomplete 
  [UP] ignoring variable rmax_time as it has address taken, results will be incomplete 
  [UP] ignoring variable rmax_val as it has address taken, results will be incomplete 
  [UP] ignoring variable rmin_id as it has address taken, results will be incomplete 
  [UP] ignoring variable rmin_time as it has address taken, results will be incomplete 
  [UP] ignoring variable rmin_val as it has address taken, results will be incomplete 
  [UP] ignoring variable rnum_unique_vals as it has address taken, results will be incomplete 
  [UP] ignoring variable rnum_vals as it has address taken, results will be incomplete 
  [UP] ignoring variable rpath as it has address taken, results will be incomplete 
  [UP] ignoring variable rtype as it has address taken, results will be incomplete 

Function emr_track_names
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_track_percentile
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function emr_track_unique
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function get_expression_vars(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] unprotected variable r_expr while calling allocating function Rf_install naryn/src/naryn.cpp:975

Function rprotect(SEXPREC*&)
  [PB] has possible protection stack imbalance naryn/src/naryn.cpp:731

Function run_in_R(char const*, SEXPREC*)
  [UP] ignoring variable expr as it has address taken, results will be incomplete 
  [UP] ignoring variable parsed_expr as it has address taken, results will be incomplete 

Function runprotect(SEXPREC*&)
  [PB] has negative depth naryn/src/naryn.cpp:747
  [PB] has possible protection stack imbalance naryn/src/naryn.cpp:751

Function runprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete naryn/src/naryn.cpp:738
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete naryn/src/naryn.cpp:738

Function runprotect_all()
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete naryn/src/naryn.cpp:762
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete naryn/src/naryn.cpp:762
