Package mets version 1.3.7
Package built using 88872/R 4.6.0; x86_64-pc-linux-gnu; 2025-09-27 06:24:25 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function ApplyBy(Rcpp::Matrix<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function FastPattern
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:680

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function _mets_ApplyBy
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_ApplyBy2
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_GcjumpsR
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_S0_FGRN
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %34 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_S0_FG_GcR
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %37 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_cpch
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:311
  [PB] has negative depth mets/src/RcppExports.cpp:323
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:323
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:324

Function _mets_cpch_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_dmvn
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:203
  [PB] has negative depth mets/src/RcppExports.cpp:215
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:215
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:216

Function _mets_dmvn_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_loglikMVN
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:167
  [PB] has negative depth mets/src/RcppExports.cpp:179
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:179
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:180

Function _mets_loglikMVN_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_rchazC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:347
  [PB] has negative depth mets/src/RcppExports.cpp:359
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:359
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:360

Function _mets_rchazC_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_rmvn
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:239
  [PB] has negative depth mets/src/RcppExports.cpp:251
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:251
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:252

Function _mets_rmvn_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_rpch
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:275
  [PB] has negative depth mets/src/RcppExports.cpp:287
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:287
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:288

Function _mets_rpch_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_scoreMVN
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:125
  [PB] has negative depth mets/src/RcppExports.cpp:137
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:137
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:138

Function _mets_scoreMVN_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_simGL
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:391
  [PB] has negative depth mets/src/RcppExports.cpp:403
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:403
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:404

Function _mets_simGL_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_simSurvZ
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:429
  [PB] has negative depth mets/src/RcppExports.cpp:441
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:441
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:442

Function _mets_simSurvZ_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_tildeLambda1
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:468
  [PB] has negative depth mets/src/RcppExports.cpp:480
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:480
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:481

Function _mets_tildeLambda1R
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:508
  [PB] has negative depth mets/src/RcppExports.cpp:520
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:520
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:521

Function _mets_tildeLambda1R_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_tildeLambda1_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
