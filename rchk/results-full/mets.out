Package mets version 1.3.4
Package built using 86189/R 4.4.0; x86_64-pc-linux-gnu; 2024-03-26 01:07:35 UTC; unix   
Checked with rchk version fdc068715daa3a256062cc20e0d4a5157dacc9a4 LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function ApplyBy(Rcpp::Matrix<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function FastPattern
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:682

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function _mets_ApplyBy
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_ApplyBy2
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_cpch
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:224
  [PB] has negative depth mets/src/RcppExports.cpp:236
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:236
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:237

Function _mets_cpch_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_dmvn
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:116
  [PB] has negative depth mets/src/RcppExports.cpp:128
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:128
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:129

Function _mets_dmvn_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_loglikMVN
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:80
  [PB] has negative depth mets/src/RcppExports.cpp:92
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:92
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:93

Function _mets_loglikMVN_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %50 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_rchazC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:260
  [PB] has negative depth mets/src/RcppExports.cpp:272
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:272
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:273

Function _mets_rchazC_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_rmvn
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:152
  [PB] has negative depth mets/src/RcppExports.cpp:164
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:164
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:165

Function _mets_rmvn_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_rpch
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:188
  [PB] has negative depth mets/src/RcppExports.cpp:200
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:200
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:201

Function _mets_rpch_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_simGL
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:304
  [PB] has negative depth mets/src/RcppExports.cpp:316
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:316
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:317

Function _mets_simGL_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_simSurvZ
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:342
  [PB] has negative depth mets/src/RcppExports.cpp:354
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:354
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:355

Function _mets_simSurvZ_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_tildeLambda1
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:381
  [PB] has negative depth mets/src/RcppExports.cpp:393
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:393
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:394

Function _mets_tildeLambda1R
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mets/src/RcppExports.cpp:421
  [PB] has negative depth mets/src/RcppExports.cpp:433
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mets/src/RcppExports.cpp:433
  [PB] has possible protection stack imbalance mets/src/RcppExports.cpp:434

Function _mets_tildeLambda1R_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mets_tildeLambda1_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
