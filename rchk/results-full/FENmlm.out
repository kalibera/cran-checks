Package FENmlm version 2.4.4
Package built using 87687/R 4.5.0; x86_64-pc-linux-gnu; 2025-02-05 22:57:53 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:682

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function _FENmlm_compute_cluster_coef_r
  [UP] ignoring variable <unnamed var:   %45 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %46 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_conv_acc_gau_2
  [UP] ignoring variable <unnamed var:   %48 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_conv_acc_gnl
  [UP] ignoring variable <unnamed var:   %51 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_conv_acc_poi_2
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_conv_seq_gau_2
  [UP] ignoring variable <unnamed var:   %48 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_conv_seq_gnl
  [UP] ignoring variable <unnamed var:   %51 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_conv_seq_poi_2
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_derivconv_acc_2
  [UP] ignoring variable <unnamed var:   %45 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_derivconv_acc_gnl
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_derivconv_seq_2
  [UP] ignoring variable <unnamed var:   %45 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_derivconv_seq_gnl
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_fixed_cost_gaussian
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_get_fe_2
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_get_fe_gnl
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_lgamma
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_log_a_exp
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_partialDerivative_other
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_table
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_tapply_sum
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_tapply_vsum
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpp_unclassFactor
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpppar_digamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpppar_exp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpppar_lgamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpppar_log
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpppar_log_a_exp
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_cpppar_trigamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_get_n_cells
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_update_deriv_single
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _FENmlm_update_mu_single_cluster
  [UP] ignoring variable <unnamed var:   %45 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %46 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp_conv_acc_gau_2(int, int, int, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, int, double, SEXPREC*)
  [UP] unprotected variable mu while calling allocating function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector() FENmlm/src/convergence.cpp:2177
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*)(?,V) with a fresh pointer (mu <arg 2>) FENmlm/src/convergence.cpp:2178

Function cpp_conv_acc_gnl(int, int, double, double, double, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, int)
  [UP] unprotected variable mu while calling allocating function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector() FENmlm/src/convergence.cpp:1238
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*)(?,V) with a fresh pointer (mu <arg 2>) FENmlm/src/convergence.cpp:1239

Function cpp_conv_acc_poi_2(int, int, int, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, int, double, SEXPREC*, SEXPREC*)
  [UP] unprotected variable exp_mu while calling allocating function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector() FENmlm/src/convergence.cpp:1678
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*)(?,V) with a fresh pointer (exp_mu <arg 2>) FENmlm/src/convergence.cpp:1679

Function cpp_conv_seq_gau_2(int, int, int, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, int, double, SEXPREC*)
  [UP] unprotected variable mu while calling allocating function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector() FENmlm/src/convergence.cpp:2322
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*)(?,V) with a fresh pointer (mu <arg 2>) FENmlm/src/convergence.cpp:2323

Function cpp_conv_seq_gnl(int, int, double, double, double, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, int)
  [UP] unprotected variable mu while calling allocating function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector() FENmlm/src/convergence.cpp:1425
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*)(?,V) with a fresh pointer (mu <arg 2>) FENmlm/src/convergence.cpp:1426

Function cpp_conv_seq_poi_2(int, int, int, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, int, double, SEXPREC*, SEXPREC*)
  [UP] unprotected variable exp_mu while calling allocating function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector() FENmlm/src/convergence.cpp:1821
  [UP] calling allocating function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::operator=(SEXPREC*)(?,V) with a fresh pointer (exp_mu <arg 2>) FENmlm/src/convergence.cpp:1822

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
