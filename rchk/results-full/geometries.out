Package geometries version 0.2.4
Package built using 87687/R 4.5.0; x86_64-pc-linux-gnu; 2025-02-05 22:58:44 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::sugar::IndexHash<16>::add_value(int)
  [UP] ignoring variable val as it has address taken, results will be incomplete 

Function _geometries_rcpp_calculate_bbox
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_close_matrix
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_column_positions
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_concatenate_vectors
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_coordinates
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_geometry_dimensions
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_get_ids
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_id_positions
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_list_sizes
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_make_geometries
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_nest
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_other_columns
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_rleid
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_rleid_indices
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_unlist_list
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_rcpp_where_is
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_as_list
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_column_positions
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_make_dataframe
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_other_columns
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_other_columns_impl
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_sexp_col_int
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_sexp_col_names
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_sexp_length
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_sexp_n_col
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_sexp_n_row
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_split_by_id
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %31 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_to_geometry_matrix_cols
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_to_geometry_matrix_cols_names
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_to_geometry_matrix_single
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_unique_ids
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_test_unique_sort
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_tests
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _geometries_tm
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bool std::__1::__insertion_sort_incomplete<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function bool std::__1::__insertion_sort_incomplete<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function geometries::bbox::calculate_bbox(Rcpp::Vector<14, Rcpp::PreserveStorage>&, SEXPREC*&)
  [UP] ignoring variable s as it has address taken, results will be incomplete 

Function geometries::bbox::calculate_bbox(Rcpp::Vector<14, Rcpp::PreserveStorage>&, SEXPREC*&, Rcpp::Vector<13, Rcpp::PreserveStorage>&)
  [UP] ignoring variable s as it has address taken, results will be incomplete 

Function geometries::bbox::calculate_bbox(Rcpp::Vector<14, Rcpp::PreserveStorage>&, SEXPREC*&, Rcpp::Vector<16, Rcpp::PreserveStorage>&)
  [UP] ignoring variable s as it has address taken, results will be incomplete 

Function geometries::coordinates::coordinates(Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, long&, long&, double&)
  [UP] ignoring variable inner_geometry as it has address taken, results will be incomplete 

Function geometries::coordinates::coordinates_impl(Rcpp::Vector<19, Rcpp::PreserveStorage>&)
  [UP] ignoring variable geometry as it has address taken, results will be incomplete 

Function geometries::coordinates::geometry_dimension(SEXPREC*&, long&, long&, long&, long&, long&, unsigned int&, long, long)
  [UP] ignoring variable tmp_geom as it has address taken, results will be incomplete 

Function geometries::coordinates::geometry_dimensions(Rcpp::Vector<19, Rcpp::PreserveStorage>&)
  [UP] ignoring variable geom as it has address taken, results will be incomplete 

Function geometries::make_geometries(Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>, bool, bool)
  [UP] ignoring variable coords as it has address taken, results will be incomplete 

Function geometries::nest::nest_impl(SEXPREC*, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function geometries::utils::column_check(SEXPREC*, SEXPREC*)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function geometries::utils::get_sexp_unique(SEXPREC*)
  [UP] ignoring variable s as it has address taken, results will be incomplete 
  [UP] ignoring variable res as it has address taken, results will be incomplete 

Function geometries::utils::other_columns(SEXPREC*&, SEXPREC*&, SEXPREC*&)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 

Function geometries::utils::other_columns(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&)
  [UP] ignoring variable other_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable other_cols_1 as it has address taken, results will be incomplete 

Function geometries::utils::rleid_indices(Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&)
  [UP] ignoring variable jcol as it has address taken, results will be incomplete 

Function rcpp_calculate_bbox(SEXPREC*, SEXPREC*)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_column_positions(SEXPREC*, SEXPREC*)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_concatenate_vectors(SEXPREC*, SEXPREC*)
  [UP] ignoring variable vec_1 as it has address taken, results will be incomplete 
  [UP] ignoring variable vec_2 as it has address taken, results will be incomplete 

Function rcpp_geometry_dimensions(SEXPREC*)
  [UP] ignoring variable geometries as it has address taken, results will be incomplete 

Function rcpp_get_ids(SEXPREC*, SEXPREC*)
  [UP] ignoring variable id_col as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_id_positions(SEXPREC*, SEXPREC*)
  [UP] ignoring variable i as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_make_geometries(SEXPREC*, SEXPREC*, SEXPREC*, Rcpp::Vector<19, Rcpp::PreserveStorage>, bool, bool)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable id_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_other_columns(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable id_col2 as it has address taken, results will be incomplete 
  [UP] ignoring variable id_col3 as it has address taken, results will be incomplete 
  [UP] ignoring variable id_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_rleid_indices(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function std::__1::enable_if<is_move_constructible<SEXPREC*>::value&&is_move_assignable<SEXPREC*>::value, void>::type std::__1::swap<SEXPREC*>(SEXPREC*&, SEXPREC*&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function test_as_list(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_column_positions(SEXPREC*, SEXPREC*)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_list()
  [UP] ignoring variable df as it has address taken, results will be incomplete 
  [UP] ignoring variable lst as it has address taken, results will be incomplete 

Function test_other_columns(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable y as it has address taken, results will be incomplete 
  [UP] ignoring variable z as it has address taken, results will be incomplete 

Function test_other_columns_impl()
  [UP] ignoring variable df as it has address taken, results will be incomplete 
  [UP] ignoring variable other_xz_int as it has address taken, results will be incomplete 
  [UP] ignoring variable other_xz_str as it has address taken, results will be incomplete 
  [UP] ignoring variable other_yz_int as it has address taken, results will be incomplete 
  [UP] ignoring variable other_yz_str as it has address taken, results will be incomplete 
  [UP] ignoring variable other_z_int as it has address taken, results will be incomplete 
  [UP] ignoring variable other_z_str as it has address taken, results will be incomplete 
  [UP] ignoring variable x_col_int as it has address taken, results will be incomplete 
  [UP] ignoring variable x_col_str as it has address taken, results will be incomplete 
  [UP] ignoring variable y_col_int as it has address taken, results will be incomplete 
  [UP] ignoring variable y_col_str as it has address taken, results will be incomplete 

Function test_sexp_col_int(SEXPREC*, SEXPREC*)
  [UP] ignoring variable v as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_sexp_col_names(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_sexp_length(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_sexp_n_col(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_sexp_n_row(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_to_geometry_matrix_cols(SEXPREC*, SEXPREC*)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function test_to_geometry_matrix_single(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable x2 as it has address taken, results will be incomplete 

Function test_unique_ids(SEXPREC*, SEXPREC*)
  [UP] ignoring variable id_col as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function tm(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function void std::__1::__insertion_sort_3<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function void std::__1::__insertion_sort_3<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function void std::__1::__sift_down<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&, std::__1::iterator_traits<SEXPREC**>::difference_type, SEXPREC**)
  [UP] ignoring variable __top as it has address taken, results will be incomplete 

Function void std::__1::__sift_down<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&, std::__1::iterator_traits<SEXPREC**>::difference_type, SEXPREC**)
  [UP] ignoring variable __top as it has address taken, results will be incomplete 
