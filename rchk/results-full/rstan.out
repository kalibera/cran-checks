Package rstan version 2.21.5
Package built using 82709/R 4.3.0; x86_64-pc-linux-gnu; 2022-08-12 08:14:17 UTC; unix   
Checked with rchk version 29e18222e1cfa67ba8e63bd3b22a25f78593c554 LLVM version 14.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function CPP_read_comments
  [PB] has possible protection stack imbalance rstan/src/chains.cpp:646

Function CPP_stan_version
  [PB] has possible protection stack imbalance rstan/src/stanc.cpp:49

Function CPP_stanc280
  [PB] has possible protection stack imbalance rstan/src/stanc.cpp:119

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Reference_Impl<Rcpp::PreserveStorage>::Reference_Impl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rcpp::internal::get_Rcpp_namespace() Rcpp/include/Rcpp/Reference.h:63

Function Rcpp::class_<rstan::stan_fit_proxy>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<stan::model::model_base>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function effective_sample_size
  [PB] has possible protection stack imbalance rstan/src/chains.cpp:397

Function effective_sample_size2
  [PB] has possible protection stack imbalance rstan/src/chains.cpp:471

Function seq_permutation
  [PB] has possible protection stack imbalance rstan/src/chains.cpp:625

Function split_potential_scale_reduction
  [PB] has possible protection stack imbalance rstan/src/chains.cpp:589

Function split_potential_scale_reduction2
  [PB] has possible protection stack imbalance rstan/src/chains.cpp:518

Function stan_prob_autocovariance
  [PB] has possible protection stack imbalance rstan/src/chains.cpp:413

Function stanfuncs
  [PB] has possible protection stack imbalance rstan/src/stanc.cpp:165
