Package archive version 1.1.8
Package built using 86521/R 4.5.0; x86_64-pc-linux-gnu; 2024-05-05 22:15:07 UTC; unix   
Checked with rchk version fdc068715daa3a256062cc20e0d4a5157dacc9a4 LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function _archive_archive_read_
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _archive_archive_write_
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _archive_archive_write_direct_
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _archive_archive_write_files_
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<SEXPREC*> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<cpp11::r_string> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<double> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<int> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::package::operator[](char const*)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::operator SEXPREC*() const
  [UP] calling allocating function cpp11::writable::truncate(SEXPREC*, long, long) with a fresh pointer (nms <arg 1>) archive/src/cpp11/include/cpp11/r_vector.hpp:921

Function cpp11::writable::r_vector<SEXPREC*>::r_vector(std::initializer_list<cpp11::named_arg>)::{lambda()#1}::operator()() const
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete archive/src/cpp11/include/cpp11/list.hpp:105
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete archive/src/cpp11/include/cpp11/list.hpp:105

Function cpp11::writable::r_vector<cpp11::r_string>::operator SEXPREC*() const
  [UP] calling allocating function cpp11::writable::truncate(SEXPREC*, long, long) with a fresh pointer (nms <arg 1>) archive/src/cpp11/include/cpp11/r_vector.hpp:921

Function cpp11::writable::r_vector<double>::operator SEXPREC*() const
  [UP] calling allocating function cpp11::writable::truncate(SEXPREC*, long, long) with a fresh pointer (nms <arg 1>) archive/src/cpp11/include/cpp11/r_vector.hpp:921

Function cpp11::writable::r_vector<int>::operator SEXPREC*() const
  [UP] calling allocating function cpp11::writable::truncate(SEXPREC*, long, long) with a fresh pointer (nms <arg 1>) archive/src/cpp11/include/cpp11/r_vector.hpp:921

Function cpp11::writable::r_vector<int>::r_vector(std::initializer_list<cpp11::named_arg>)::{lambda()#1}::operator()() const
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete archive/src/cpp11/include/cpp11/integers.hpp:116
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete archive/src/cpp11/include/cpp11/integers.hpp:116

Function cpp11::writable::truncate(SEXPREC*, long, long)
  [UP] ignoring variable x as it has address taken, results will be incomplete 
