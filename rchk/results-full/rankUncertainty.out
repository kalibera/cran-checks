Package rankUncertainty version 1.0.2.0
Package built using 81199/R 4.2.0; x86_64-pc-linux-gnu; 2021-11-16 14:40:29 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 11.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:683

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function _rankUncertainty_countPrincipalDownSets
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr rankUncertainty/src/RcppExports.cpp:36
  [PB] has negative depth rankUncertainty/src/RcppExports.cpp:48
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete rankUncertainty/src/RcppExports.cpp:48
  [PB] has possible protection stack imbalance rankUncertainty/src/RcppExports.cpp:49

Function _rankUncertainty_countPrincipalDownSets_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _rankUncertainty_getCompatibility
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr rankUncertainty/src/RcppExports.cpp:72
  [PB] has negative depth rankUncertainty/src/RcppExports.cpp:84
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete rankUncertainty/src/RcppExports.cpp:84
  [PB] has possible protection stack imbalance rankUncertainty/src/RcppExports.cpp:85

Function _rankUncertainty_getCompatibility_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _rankUncertainty_getIndexIntervals
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr rankUncertainty/src/RcppExports.cpp:107
  [PB] has negative depth rankUncertainty/src/RcppExports.cpp:119
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete rankUncertainty/src/RcppExports.cpp:119
  [PB] has possible protection stack imbalance rankUncertainty/src/RcppExports.cpp:120

Function _rankUncertainty_getIndexIntervals_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _rankUncertainty_getPartitionInfo
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr rankUncertainty/src/RcppExports.cpp:143
  [PB] has negative depth rankUncertainty/src/RcppExports.cpp:155
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete rankUncertainty/src/RcppExports.cpp:155
  [PB] has possible protection stack imbalance rankUncertainty/src/RcppExports.cpp:156

Function _rankUncertainty_getPartitionInfo_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _rankUncertainty_makeCanonicalRep
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr rankUncertainty/src/RcppExports.cpp:179
  [PB] has negative depth rankUncertainty/src/RcppExports.cpp:191
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete rankUncertainty/src/RcppExports.cpp:191
  [PB] has possible protection stack imbalance rankUncertainty/src/RcppExports.cpp:192

Function _rankUncertainty_makeCanonicalRep_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
