Package independence version 1.0.1
Package built using 82503/R 4.3.0; x86_64-pc-linux-gnu; 2022-06-21 06:56:19 UTC; unix   
Checked with rchk version 29e18222e1cfa67ba8e63bd3b22a25f78593c554 LLVM version 14.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _independence_calc_hoeffding
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr independence/src/RcppExports.cpp:130
  [PB] has negative depth independence/src/RcppExports.cpp:142
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete independence/src/RcppExports.cpp:142
  [PB] has possible protection stack imbalance independence/src/RcppExports.cpp:143

Function _independence_calc_hoeffding_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _independence_calc_refined
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr independence/src/RcppExports.cpp:164
  [PB] has negative depth independence/src/RcppExports.cpp:176
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete independence/src/RcppExports.cpp:176
  [PB] has possible protection stack imbalance independence/src/RcppExports.cpp:177

Function _independence_calc_refined_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _independence_calc_taustar
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr independence/src/RcppExports.cpp:96
  [PB] has negative depth independence/src/RcppExports.cpp:108
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete independence/src/RcppExports.cpp:108
  [PB] has possible protection stack imbalance independence/src/RcppExports.cpp:109

Function _independence_calc_taustar_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _independence_max_hoeffding
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr independence/src/RcppExports.cpp:62
  [PB] has negative depth independence/src/RcppExports.cpp:74
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete independence/src/RcppExports.cpp:74
  [PB] has possible protection stack imbalance independence/src/RcppExports.cpp:75

Function _independence_max_hoeffding_try()
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _independence_max_taustar
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr independence/src/RcppExports.cpp:29
  [PB] has negative depth independence/src/RcppExports.cpp:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete independence/src/RcppExports.cpp:41
  [PB] has possible protection stack imbalance independence/src/RcppExports.cpp:42

Function _independence_max_taustar_try()
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
