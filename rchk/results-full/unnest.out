Package unnest version 0.0.2
Package built using 80923/R 4.2.0; x86_64-pc-linux-gnu; 2021-09-18 18:27:33 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 11.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function IxNode::push(long, long, int, SEXPREC*)
  [UP] ignoring variable name as it has address taken, results will be incomplete 

Function Spec::Rf_match(SEXPREC*) const
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable nm as it has address taken, results will be incomplete 

Function Unnester::add_node_impl(NodeAccumulator&, VarAccumulator&, Spec const&, Spec const&, unsigned long, SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function Unnester::process(SEXPREC*, SEXPREC*)
  [UP] unprotected variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> while calling allocating function NodeAccumulator::~NodeAccumulator() unnest/src/./unnest.h:284

Function fill_spec_ixes(char const*, SEXPREC*, std::__1::vector<int, std::__1::allocator<int> >&, std::__1::vector<SEXPREC*, std::__1::allocator<SEXPREC*> >&)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function sexp2spec(SEXPREC*)
  [UP] unprotected variable gnames while calling allocating function spec_group(SEXPREC*, SEXPREC*) unnest/src/Spec.cpp:201

Function spec_group(SEXPREC*, SEXPREC*)
  [UP] ignoring variable name as it has address taken, results will be incomplete 
