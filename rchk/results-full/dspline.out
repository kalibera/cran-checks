Package dspline version 1.0.2
Package built using 88200/R 4.6.0; x86_64-pc-linux-gnu; 2025-05-15 06:09:01 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::S4_Impl<Rcpp::PreserveStorage>::S4_Impl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] calling allocating function R_do_new_object with argument allocated using R_do_MAKE_CLASS Rcpp/include/Rcpp/S4.h:58

Function _dspline_rcpp_b_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:119
  [PB] has negative depth dspline/src/RcppExports.cpp:131
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:131
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:132

Function _dspline_rcpp_b_mat_mult
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:459
  [PB] has negative depth dspline/src/RcppExports.cpp:471
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:471
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:472

Function _dspline_rcpp_b_mat_mult_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_b_mat_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_d_mat_mult
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:420
  [PB] has negative depth dspline/src/RcppExports.cpp:432
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:432
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:433

Function _dspline_rcpp_d_mat_mult_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_discrete_deriv
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_discrete_integ
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_divided_diff
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_dot_b_mat_mult
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:344
  [PB] has negative depth dspline/src/RcppExports.cpp:356
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:356
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:357

Function _dspline_rcpp_dot_h_mat_mult
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:382
  [PB] has negative depth dspline/src/RcppExports.cpp:394
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:394
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:395

Function _dspline_rcpp_dspline_interp
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_h_eval
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:230
  [PB] has negative depth dspline/src/RcppExports.cpp:242
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:242
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:243

Function _dspline_rcpp_h_eval_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_h_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:156
  [PB] has negative depth dspline/src/RcppExports.cpp:168
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:168
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:169

Function _dspline_rcpp_h_mat_mult
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:498
  [PB] has negative depth dspline/src/RcppExports.cpp:510
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:510
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:511

Function _dspline_rcpp_h_mat_mult_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_h_mat_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_n_eval
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:268
  [PB] has negative depth dspline/src/RcppExports.cpp:280
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:280
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:281

Function _dspline_rcpp_n_eval_precomputed
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:306
  [PB] has negative depth dspline/src/RcppExports.cpp:318
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:318
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:319

Function _dspline_rcpp_n_eval_precomputed_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_n_eval_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_n_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr dspline/src/RcppExports.cpp:193
  [PB] has negative depth dspline/src/RcppExports.cpp:205
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete dspline/src/RcppExports.cpp:205
  [PB] has possible protection stack imbalance dspline/src/RcppExports.cpp:206

Function _dspline_rcpp_n_mat_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _dspline_rcpp_newton_interp
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
