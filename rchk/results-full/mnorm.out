Package mnorm version 1.0.1
Package built using 82503/R 4.3.0; x86_64-pc-linux-gnu; 2022-06-21 07:53:08 UTC; unix   
Checked with rchk version 29e18222e1cfa67ba8e63bd3b22a25f78593c554 LLVM version 14.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function GaussQuadrature(int)
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:683

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function _mnorm_GHK
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:319
  [PB] has negative depth mnorm/src/RcppExports.cpp:331
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:331
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:332

Function _mnorm_GHK_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_cmnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:43
  [PB] has negative depth mnorm/src/RcppExports.cpp:55
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:55
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:56

Function _mnorm_cmnorm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_dmnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:85
  [PB] has negative depth mnorm/src/RcppExports.cpp:97
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:97
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:98

Function _mnorm_dmnorm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_halton
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:125
  [PB] has negative depth mnorm/src/RcppExports.cpp:137
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:137
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:138

Function _mnorm_haltonSingleDraw
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:159
  [PB] has negative depth mnorm/src/RcppExports.cpp:171
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:171
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:172

Function _mnorm_haltonSingleDraw_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_halton_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_pmnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:241
  [PB] has negative depth mnorm/src/RcppExports.cpp:253
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:253
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:254

Function _mnorm_pmnorm2
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:280
  [PB] has negative depth mnorm/src/RcppExports.cpp:292
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:292
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:293

Function _mnorm_pmnorm2_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_pmnorm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %59 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_qnormFast
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:357
  [PB] has negative depth mnorm/src/RcppExports.cpp:369
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:369
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:370

Function _mnorm_qnormFast_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _mnorm_seqPrimes
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr mnorm/src/RcppExports.cpp:192
  [PB] has negative depth mnorm/src/RcppExports.cpp:204
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete mnorm/src/RcppExports.cpp:204
  [PB] has possible protection stack imbalance mnorm/src/RcppExports.cpp:205

Function _mnorm_seqPrimes_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
