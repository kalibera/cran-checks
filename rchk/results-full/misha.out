Package misha version 4.3.12
Package built using 88872/R 4.6.0; x86_64-pc-linux-gnu; 2025-09-27 04:08:52 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function TrackExprScanner::check(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, GIntervalsFetcher1D*, GIntervalsFetcher2D*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable expr as it has address taken, results will be incomplete 

Function TrackExprScanner::create_expr_iterator(SEXPREC*, TrackExpressionVars const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, GIntervalsFetcher1D*, GIntervalsFetcher2D*, GIntervals&, GIntervals2D&, DiagonalBand const&, bool)
  [UP] ignoring variable all_track_names as it has address taken, results will be incomplete 
  [UP] ignoring variable meta as it has address taken, results will be incomplete 

Function TrackExpressionVars::init(TrackExpressionIteratorBase const&)
  [UP] ignoring variable val as it has address taken, results will be incomplete 

Function gfind_neighbors
  [UP] ignoring variable rdists as it has address taken, results will be incomplete 
  [UP] ignoring variable rdists1 as it has address taken, results will be incomplete 
  [UP] ignoring variable rdists2 as it has address taken, results will be incomplete 

Function gfind_tracks_n_intervals
  [UP] ignoring variable rtracks as it has address taken, results will be incomplete 
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable rintervs as it has address taken, results will be incomplete 

Function gget_tracks_attrs
  [UP] ignoring variable rattr as it has address taken, results will be incomplete 
  [UP] ignoring variable rattrs as it has address taken, results will be incomplete 

Function gintervals_chrom_sizes
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms1 as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx1 as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx2 as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable sizes as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms2 as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 

Function gintervals_import_genes
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable ends as it has address taken, results will be incomplete 
  [UP] ignoring variable rintervs as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable starts as it has address taken, results will be incomplete 
  [UP] ignoring variable strands as it has address taken, results will be incomplete 
  [UP] ignoring variable answer_col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms as it has address taken, results will be incomplete 

Function gintervals_stats
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable colnames as it has address taken, results will be incomplete 
  [UP] ignoring variable rexp as it has address taken, results will be incomplete 
  [UP] ignoring variable rownames as it has address taken, results will be incomplete 

Function gintervcanonic
  [UP] ignoring variable old2new_mapping as it has address taken, results will be incomplete 

Function gintervs_liftover
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rsrc_indices as it has address taken, results will be incomplete 

Function gintervsort
  [UP] ignoring variable strands as it has address taken, results will be incomplete 

Function gmapply
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable res as it has address taken, results will be incomplete 
  [UP] ignoring variable rinterv_id as it has address taken, results will be incomplete 
  [UP] ignoring variable rlast_intervals as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rvals as it has address taken, results will be incomplete 
  [UP] ignoring variable eval_expr as it has address taken, results will be incomplete 

Function gmapply_multitask
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable res as it has address taken, results will be incomplete 
  [UP] ignoring variable rinterv_id as it has address taken, results will be incomplete 
  [UP] ignoring variable rlast_intervals as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rvals as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable eval_expr as it has address taken, results will be incomplete 

Function gseqread
  [UP] ignoring variable answer as it has address taken, results will be incomplete 

Function gset_tracks_attrs
  [UP] ignoring variable rattr_names as it has address taken, results will be incomplete 
  [UP] ignoring variable rtracknames as it has address taken, results will be incomplete 

Function gtrackimport_mappedseq
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable chrom_stat as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable dups as it has address taken, results will be incomplete 
  [UP] ignoring variable mapped as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable total_stat as it has address taken, results will be incomplete 

Function rdb::IntervUtils::convert_chain_intervs(rdb::ChainIntervals const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable src_chroms as it has address taken, results will be incomplete 
  [UP] ignoring variable src_chroms_idx as it has address taken, results will be incomplete 
  [UP] ignoring variable src_starts as it has address taken, results will be incomplete 

Function rdb::IntervUtils::convert_intervs(GIntervalsFetcher1D*, unsigned int, bool, bool) const
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable ends as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable starts as it has address taken, results will be incomplete 

Function rdb::IntervUtils::convert_intervs(GIntervalsFetcher2D*, unsigned int, bool, bool) const
  [UP] ignoring variable answer as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms1 as it has address taken, results will be incomplete 
  [UP] ignoring variable ends1 as it has address taken, results will be incomplete 
  [UP] ignoring variable starts1 as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms2 as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx1 as it has address taken, results will be incomplete 
  [UP] ignoring variable chroms_idx2 as it has address taken, results will be incomplete 
  [UP] ignoring variable col_names as it has address taken, results will be incomplete 
  [UP] ignoring variable ends2 as it has address taken, results will be incomplete 
  [UP] ignoring variable row_names as it has address taken, results will be incomplete 
  [UP] ignoring variable starts2 as it has address taken, results will be incomplete 

Function rdb::IntervUtils::convert_rintervs(SEXPREC*, GIntervals*, GIntervals2D*, bool, GenomeChromKey const*, char const*, unsigned int*, bool) const
  [UP] ignoring variable gintervs as it has address taken, results will be incomplete 
  [UP] ignoring variable rintervals as it has address taken, results will be incomplete 

Function rdb::IntervUtils::track_exists(char const*)
  [UP] ignoring variable all_track_names as it has address taken, results will be incomplete 

Function rdb::rprotect(SEXPREC*&)
  [PB] has possible protection stack imbalance misha/src/rdbutils.cpp:700

Function rdb::rprotect_ptr(SEXPREC*)
  [PB] has possible protection stack imbalance misha/src/./rdbutils.h:476

Function rdb::runprotect(SEXPREC*&)
  [PB] has negative depth misha/src/rdbutils.cpp:715
  [PB] has possible protection stack imbalance misha/src/rdbutils.cpp:719

Function rdb::runprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete misha/src/rdbutils.cpp:706
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete misha/src/rdbutils.cpp:706

Function rdb::runprotect_all()
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete misha/src/rdbutils.cpp:730
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete misha/src/rdbutils.cpp:730
