Package Countr version 3.5.8
Package built using 86189/R 4.4.0; x86_64-pc-linux-gnu; 2024-03-26 02:50:39 UTC; unix   
Checked with rchk version fdc068715daa3a256062cc20e0d4a5157dacc9a4 LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_alphagen
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:859
  [PB] has negative depth Countr/src/RcppExports.cpp:871
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:871
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:872

Function _Countr_alphagen_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_scalar_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_scalar_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_vec_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_vec_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_bi
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_scalar_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_scalar_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_user
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_vec_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_vec_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_bi
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_scalar_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_scalar_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_user
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_vec_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_vec_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_acc
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:1018
  [PB] has negative depth Countr/src/RcppExports.cpp:1030
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:1030
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:1031

Function _Countr_dWeibullCount_acc_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_acc_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:1060
  [PB] has negative depth Countr/src/RcppExports.cpp:1072
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:1072
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:1073

Function _Countr_dWeibullCount_acc_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:898
  [PB] has negative depth Countr/src/RcppExports.cpp:910
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:910
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:911

Function _Countr_dWeibullCount_mat_scalar
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:937
  [PB] has negative depth Countr/src/RcppExports.cpp:949
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:949
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:950

Function _Countr_dWeibullCount_mat_scalar_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_mat_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_mat_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:976
  [PB] has negative depth Countr/src/RcppExports.cpp:988
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:988
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:989

Function _Countr_dWeibullCount_mat_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:690
  [PB] has negative depth Countr/src/RcppExports.cpp:702
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:702
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:703

Function _Countr_dWeibullgammaCount_acc_Covariates
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:778
  [PB] has negative depth Countr/src/RcppExports.cpp:790
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:790
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:791

Function _Countr_dWeibullgammaCount_acc_Covariates_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc_Covariates_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:823
  [PB] has negative depth Countr/src/RcppExports.cpp:835
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:835
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:836

Function _Countr_dWeibullgammaCount_acc_Covariates_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:733
  [PB] has negative depth Countr/src/RcppExports.cpp:745
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:745
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:746

Function _Countr_dWeibullgammaCount_acc_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:523
  [PB] has negative depth Countr/src/RcppExports.cpp:535
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:535
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:536

Function _Countr_dWeibullgammaCount_mat_Covariates
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:605
  [PB] has negative depth Countr/src/RcppExports.cpp:617
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:617
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:618

Function _Countr_dWeibullgammaCount_mat_Covariates_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat_Covariates_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:647
  [PB] has negative depth Countr/src/RcppExports.cpp:659
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:659
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:660

Function _Countr_dWeibullgammaCount_mat_Covariates_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:563
  [PB] has negative depth Countr/src/RcppExports.cpp:575
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:575
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:576

Function _Countr_dWeibullgammaCount_mat_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_bi
  [UP] ignoring variable <unnamed var:   %39 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_scalar_bi
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_scalar_user
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_user
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_getProbsmodified_dePril
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sBurr
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sWeibull
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sgamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sgengamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_surv
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getAllProbs(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %173 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %194 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %195 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %166 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %177 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %198 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %199 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_dePril_even(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %168 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %182 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %204 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_dePril_odd(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %174 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %196 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %197 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_weibull_dePril_even(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, arma::Col<double>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %191 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %205 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %206 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %229 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %230 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_weibull_dePril_odd(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, arma::Col<double>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %199 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %200 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %223 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %224 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %225 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
