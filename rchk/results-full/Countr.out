Package Countr version 3.5.5
Package built using 80063/R 4.1.0; x86_64-pc-linux-gnu; 2021-03-05 03:07:23 UTC; unix   
Checked with rchk version 3d653b7c8f92dac912532856b55f44d2986c6553 LLVM version 10.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<13, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<13, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<13>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:74

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector()
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:57

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector()
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:57

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_alphagen
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:854
  [PB] has negative depth Countr/src/RcppExports.cpp:866
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:866
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:867

Function _Countr_alphagen_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_scalar_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_scalar_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_vec_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_allProbs_vec_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_bi
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_scalar_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_scalar_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_user
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_vec_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_dePril_vec_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_bi
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_scalar_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_scalar_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_user
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_vec_bi
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dCount_naive_vec_user
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_acc
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:1013
  [PB] has negative depth Countr/src/RcppExports.cpp:1025
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:1025
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:1026

Function _Countr_dWeibullCount_acc_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_acc_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:1055
  [PB] has negative depth Countr/src/RcppExports.cpp:1067
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:1067
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:1068

Function _Countr_dWeibullCount_acc_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:893
  [PB] has negative depth Countr/src/RcppExports.cpp:905
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:905
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:906

Function _Countr_dWeibullCount_mat_scalar
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:932
  [PB] has negative depth Countr/src/RcppExports.cpp:944
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:944
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:945

Function _Countr_dWeibullCount_mat_scalar_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_mat_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullCount_mat_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:971
  [PB] has negative depth Countr/src/RcppExports.cpp:983
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:983
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:984

Function _Countr_dWeibullCount_mat_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:685
  [PB] has negative depth Countr/src/RcppExports.cpp:697
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:697
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:698

Function _Countr_dWeibullgammaCount_acc_Covariates
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:773
  [PB] has negative depth Countr/src/RcppExports.cpp:785
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:785
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:786

Function _Countr_dWeibullgammaCount_acc_Covariates_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc_Covariates_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:818
  [PB] has negative depth Countr/src/RcppExports.cpp:830
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:830
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:831

Function _Countr_dWeibullgammaCount_acc_Covariates_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_acc_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:728
  [PB] has negative depth Countr/src/RcppExports.cpp:740
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:740
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:741

Function _Countr_dWeibullgammaCount_acc_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:518
  [PB] has negative depth Countr/src/RcppExports.cpp:530
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:530
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:531

Function _Countr_dWeibullgammaCount_mat_Covariates
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:600
  [PB] has negative depth Countr/src/RcppExports.cpp:612
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:612
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:613

Function _Countr_dWeibullgammaCount_mat_Covariates_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat_Covariates_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:642
  [PB] has negative depth Countr/src/RcppExports.cpp:654
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:654
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:655

Function _Countr_dWeibullgammaCount_mat_Covariates_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dWeibullgammaCount_mat_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr Countr/src/RcppExports.cpp:558
  [PB] has negative depth Countr/src/RcppExports.cpp:570
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Countr/src/RcppExports.cpp:570
  [PB] has possible protection stack imbalance Countr/src/RcppExports.cpp:571

Function _Countr_dWeibullgammaCount_mat_vec_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_bi
  [UP] ignoring variable <unnamed var:   %39 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_scalar_bi
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_scalar_user
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_dmodifiedCount_user
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_getProbsmodified_dePril
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sBurr
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sWeibull
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sgamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_sgengamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _Countr_surv
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _ZN4Rcpp6VectorILi16ENS_15PreserveStorageEEC2ImEET_PNS_6traits9enable_ifIXsr6traits13is_arithmeticIS4_EE5valueEvE4typeE
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<16, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:125

Function getAllProbs(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %165 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %186 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %187 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %158 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %169 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %190 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %191 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_dePril_even(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %160 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %196 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %174 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_dePril_odd(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, arma::Col<double>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %189 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %166 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %188 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_weibull_dePril_even(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, arma::Col<double>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %194 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %217 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %218 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %179 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %193 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getProbs_weibull_dePril_odd(unsigned int, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Function_Impl<Rcpp::PreserveStorage>, arma::Col<double>, unsigned int const&, double, bool)
  [UP] ignoring variable <unnamed var:   %187 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %188 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %211 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %212 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %213 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
