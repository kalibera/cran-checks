Package vroom version 1.5.7
Package built using 82396/R 4.3.0; x86_64-pc-linux-gnu; 2022-05-24 14:34:41 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 12.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md

Suspicious call (two or more unprotected arguments) to Rf_lang3 at vroom_errors::warn_for_errors() const vroom/src/./vroom_errors.h:89


Function R_ReadConnection(SEXPREC*, void*, unsigned long)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function R_WriteConnection(SEXPREC*, void*, unsigned long)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function _vroom_vroom_
  [UP] ignoring variable <unnamed var:   %46 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_vroom_convert
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_vroom_materialize
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_vroom_rle
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function con_description(SEXPREC*)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function convert_connection(SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable in_con as it has address taken, results will be incomplete 
  [UP] ignoring variable out_con as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::r_vector<SEXPREC*> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::sexp>::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<SEXPREC*> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<cpp11::r_bool> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<cpp11::r_string> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<double> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<int> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::writable::r_vector<unsigned char> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::package::operator[](char const*)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::alloc_or_copy(SEXPREC*)
  [UP] ignoring variable data as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::r_vector(std::initializer_list<cpp11::named_arg>)::{lambda()#1}::operator()() const
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete cpp11/include/cpp11/list.hpp:105
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete cpp11/include/cpp11/list.hpp:105

Function int parse_factor<std::__1::shared_ptr<vroom::index::range> >(long, std::__1::shared_ptr<vroom::index::range> const&, std::__1::unordered_map<SEXPREC*, unsigned long, std::__1::hash<SEXPREC*>, std::__1::equal_to<SEXPREC*>, std::__1::allocator<std::__1::pair<SEXPREC* const, unsigned long> > > const&, LocaleInfo&, std::__1::shared_ptr<vroom_errors>&, SEXPREC*)
  [UP] ignoring variable str_sexp as it has address taken, results will be incomplete 

Function int parse_factor<vroom::iterator, std::__1::shared_ptr<vroom::index::range> >(vroom::iterator const&, std::__1::shared_ptr<vroom::index::range> const&, std::__1::unordered_map<SEXPREC*, unsigned long, std::__1::hash<SEXPREC*>, std::__1::equal_to<SEXPREC*>, std::__1::allocator<std::__1::pair<SEXPREC* const, unsigned long> > > const&, LocaleInfo&, std::__1::shared_ptr<vroom_errors>&, SEXPREC*)
  [UP] ignoring variable str_sexp as it has address taken, results will be incomplete 

Function is_open(SEXPREC*)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function read_chr(vroom_vec_info*)::$_1::operator()() const
  [UP] unprotected variable val while calling allocating function vroom::iterator::filename() const vroom/src/vroom_chr.cc:31
  [UP] unprotected variable val while calling allocating function vroom::iterator::index() const vroom/src/vroom_chr.cc:31
  [UP] unprotected variable val while calling allocating function cpp11::writable::r_vector<cpp11::r_string>::operator SEXPREC*() const vroom/src/vroom_chr.cc:34

Function read_fct_explicit(vroom_vec_info*, cpp11::r_vector<cpp11::r_string> const&, bool)
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function resolve_collectors(cpp11::sexp, cpp11::sexp, cpp11::sexp, cpp11::sexp, std::__1::shared_ptr<vroom::index_collection>, cpp11::r_vector<cpp11::r_string>, std::__1::shared_ptr<LocaleInfo>, unsigned long, unsigned long)
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %64 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %46 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function std::__1::enable_if<((!is_smart_ptr<cpp11::writable::r_vector<cpp11::r_string> >::value)&&std::is_class<cpp11::writable::r_vector<cpp11::r_string> >::value)&&std::is_constructible<cpp11::writable::r_vector<cpp11::r_string>, SEXPREC*>::value, cpp11::writable::r_vector<cpp11::r_string> >::type cpp11::as_cpp<cpp11::writable::r_vector<cpp11::r_string> >(SEXPREC*)
  [UP] ignoring variable from as it has address taken, results will be incomplete 

Function vroom::create_columns(std::__1::shared_ptr<vroom::index_collection>, cpp11::sexp, cpp11::sexp, cpp11::sexp, cpp11::sexp, SEXPREC*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, cpp11::r_vector<cpp11::r_string>, cpp11::r_vector<SEXPREC*>, unsigned long, unsigned long, cpp11::external_pointer<std::__1::shared_ptr<vroom_errors>, &(void cpp11::default_deleter<std::__1::shared_ptr<vroom_errors> >(std::__1::shared_ptr<vroom_errors>*))>, unsigned long)
  [UP] ignoring variable <unnamed var:   %102 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %104 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %107 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %109 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %116 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %54 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %56 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %59 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %61 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %64 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %71 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %74 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %78 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %82 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %85 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %90 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %92 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %96 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %98 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function vroom::delimited_index_connection::delimited_index_connection(SEXPREC*, char const*, char, bool, bool, bool, bool, unsigned long, unsigned long, char const*, bool, std::__1::shared_ptr<vroom_errors>, unsigned long, bool)
  [UP] ignoring variable in as it has address taken, results will be incomplete 

Function vroom::fixed_width_index_connection::fixed_width_index_connection(SEXPREC*, std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> >, bool, unsigned long, char const*, bool, unsigned long, bool, unsigned long)
  [UP] ignoring variable in as it has address taken, results will be incomplete 

Function vroom_errors::warn_for_errors() const
  [UP] calling allocating function Rf_findFun(S:warn,?) with argument allocated using Rf_findVarInFrame(?,S:rlang) vroom/src/./vroom_errors.h:86

Function vroom_fct::Make(vroom_vec_info*, cpp11::r_vector<cpp11::r_string>, bool)
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function write_buf_con(std::__1::vector<char, std::__1::allocator<char> > const&, SEXPREC*, bool)
  [UP] ignoring variable con as it has address taken, results will be incomplete 
