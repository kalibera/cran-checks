Package colourvalues version 0.3.7
Package built using 80923/R 4.2.0; x86_64-pc-linux-gnu; 2021-09-18 18:35:58 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 11.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:683

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function Rcpp::sugar::IndexHash<16>::add_value(int)
  [UP] ignoring variable val as it has address taken, results will be incomplete 

Function _ZNSt3__14swapIP7SEXPRECEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_blue2green
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_blue2red
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_blue2yellow
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_blues
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_brbg
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_bugn
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_bupu
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_cividis
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_cm
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_colour_values_hex
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %37 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_colour_values_rgb
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %37 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_colour_values_rgb_interleaved
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %43 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_convert_hex_to_rgb
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_convert_rgb_mat_to_hex
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_convert_rgb_vec_to_hex
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_cyan2yellow
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_diverge_hcl
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_diverge_hsv
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_get_format_type
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_get_palette
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_get_r_class
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_gnbu
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_green2red
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_greens
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_greys
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_heat
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_heat_hcl
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_inferno
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_list_size
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_magenta2green
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_magma
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_matlab_like
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_matlab_like2
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_oranges
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_orrd
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_piyg
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_plasma
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_prgn
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_pubu
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_pubugn
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_puor
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_purd
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_purples
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_rainbow
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_rainbow_hcl
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_rdbu
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_rdgy
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_rdpu
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_rdylbu
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_rdylgn
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_reds
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_refil_list
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_scale
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_sequential_hcl
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_spectral
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_terrain
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_terrain_hcl
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_topo
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_validate_alpha
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_validate_rgb_range
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_validate_rgb_spline
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_vector_type
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_viridis
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_ygobb
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_ylgn
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_ylgnbu
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_ylorbr
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _colourvalues_rcpp_ylorrd
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bool std::__1::__insertion_sort_incomplete<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function bool std::__1::__insertion_sort_incomplete<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function colourvalues::api::colour_values_hex(SEXPREC*, Rcpp::Matrix<14, Rcpp::PreserveStorage>&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, int, bool, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function colourvalues::api::colour_values_hex(SEXPREC*, Rcpp::Vector<16, Rcpp::PreserveStorage>&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, int, bool, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function colourvalues::api::colour_values_rgb(SEXPREC*, Rcpp::Matrix<14, Rcpp::PreserveStorage>&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, int, bool, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function colourvalues::api::colour_values_rgb(SEXPREC*, Rcpp::Vector<16, Rcpp::PreserveStorage>&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, int, bool, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function colourvalues::api::colour_values_rgb_interleaved(SEXPREC*, Rcpp::Matrix<14, Rcpp::PreserveStorage>&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, int, bool, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function colourvalues::api::colour_values_rgb_interleaved(SEXPREC*, Rcpp::Vector<16, Rcpp::PreserveStorage>&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, int, bool, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function colourvalues::colours_hex::colour_value_hex(Rcpp::Vector<14, Rcpp::PreserveStorage>&, Rcpp::Matrix<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, int, bool, int)
  [UP] ignoring variable summary_values as it has address taken, results will be incomplete 

Function colourvalues::colours_hex::colour_value_hex(Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, int, bool, int)
  [UP] ignoring variable summary_values as it has address taken, results will be incomplete 

Function colourvalues::colours_rgb::colour_value_rgb(Rcpp::Vector<14, Rcpp::PreserveStorage>&, Rcpp::Matrix<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, int, bool, int)
  [UP] ignoring variable summary_values as it has address taken, results will be incomplete 

Function colourvalues::colours_rgb::colour_value_rgb(Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, int, bool, int)
  [UP] ignoring variable summary_values as it has address taken, results will be incomplete 

Function colourvalues::colours_rgb_interleaved::colour_value_rgb_interleaved(Rcpp::Vector<14, Rcpp::PreserveStorage>&, Rcpp::Matrix<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, long&, int, bool, int)
  [UP] ignoring variable summary_values as it has address taken, results will be incomplete 

Function colourvalues::colours_rgb_interleaved::colour_value_rgb_interleaved(Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Vector<14, Rcpp::PreserveStorage>&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, long&, int, bool, int)
  [UP] ignoring variable summary_values as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void std::__1::__insertion_sort_3<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function void std::__1::__insertion_sort_3<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 
