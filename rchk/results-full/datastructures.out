Package datastructures version 0.2.9
Package built using 82396/R 4.3.0; x86_64-pc-linux-gnu; 2022-05-24 11:56:02 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 12.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Reference_Impl<Rcpp::PreserveStorage>::Reference_Impl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rcpp::internal::get_Rcpp_namespace() Rcpp/include/Rcpp/Reference.h:63

Function Rcpp::class_<bimap<double, bool> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<double, double> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<double, int> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<double, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<int, bool> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<int, double> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<int, int> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<bimap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<datastructures::map<std::__1::unordered_map, double> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<datastructures::map<std::__1::unordered_map, int> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<datastructures::map<std::__1::unordered_map, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<datastructures::map<std::__1::unordered_multimap, double> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<datastructures::map<std::__1::unordered_multimap, int> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<datastructures::map<std::__1::unordered_multimap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<heap<boost::heap::binomial_heap, double> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<heap<boost::heap::binomial_heap, int> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<heap<boost::heap::binomial_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<heap<boost::heap::fibonacci_heap, double> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<heap<boost::heap::fibonacci_heap, int> >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<heap<boost::heap::fibonacci_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<queue>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<stack>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function datastructures::map<std::__1::unordered_map, double>::get(std::__1::vector<double, std::__1::allocator<double> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:170

Function datastructures::map<std::__1::unordered_map, double>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:125

Function datastructures::map<std::__1::unordered_map, int>::get(std::__1::vector<int, std::__1::allocator<int> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:170

Function datastructures::map<std::__1::unordered_map, int>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:125

Function datastructures::map<std::__1::unordered_map, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::get(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:170

Function datastructures::map<std::__1::unordered_map, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:125

Function datastructures::map<std::__1::unordered_multimap, double>::get(std::__1::vector<double, std::__1::allocator<double> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:170

Function datastructures::map<std::__1::unordered_multimap, double>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:125

Function datastructures::map<std::__1::unordered_multimap, int>::get(std::__1::vector<int, std::__1::allocator<int> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:170

Function datastructures::map<std::__1::unordered_multimap, int>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:125

Function datastructures::map<std::__1::unordered_multimap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::get(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:170

Function datastructures::map<std::__1::unordered_multimap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/map.hpp:125

Function heap<boost::heap::binomial_heap, double>::handles(std::__1::vector<double, std::__1::allocator<double> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:112

Function heap<boost::heap::binomial_heap, double>::handles_value(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:141

Function heap<boost::heap::binomial_heap, double>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:170

Function heap<boost::heap::binomial_heap, int>::handles(std::__1::vector<int, std::__1::allocator<int> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:112

Function heap<boost::heap::binomial_heap, int>::handles_value(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:141

Function heap<boost::heap::binomial_heap, int>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:170

Function heap<boost::heap::binomial_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::handles(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:112

Function heap<boost::heap::binomial_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::handles_value(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:141

Function heap<boost::heap::binomial_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:170

Function heap<boost::heap::fibonacci_heap, double>::handles(std::__1::vector<double, std::__1::allocator<double> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:112

Function heap<boost::heap::fibonacci_heap, double>::handles_value(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:141

Function heap<boost::heap::fibonacci_heap, double>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:170

Function heap<boost::heap::fibonacci_heap, int>::handles(std::__1::vector<int, std::__1::allocator<int> >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:112

Function heap<boost::heap::fibonacci_heap, int>::handles_value(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:141

Function heap<boost::heap::fibonacci_heap, int>::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:170

Function heap<boost::heap::fibonacci_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::handles(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:112

Function heap<boost::heap::fibonacci_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::handles_value(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:141

Function heap<boost::heap::fibonacci_heap, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::values()
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete datastructures/src/../inst/include/heap.hpp:170
