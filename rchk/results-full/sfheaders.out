Package sfheaders version 0.4.4
Package built using 87687/R 4.5.0; x86_64-pc-linux-gnu; 2025-02-05 23:52:50 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::AttributeProxyPolicy<Rcpp::Vector<19, Rcpp::PreserveStorage> >::AttributeProxy::operator std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> ><std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >() const
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<19, Rcpp::PreserveStorage> >::AttributeProxy::get() const Rcpp/include/Rcpp/api/meat/proxy.h:40

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:682

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function Rcpp::sugar::IndexHash<16>::add_value(int)
  [UP] ignoring variable val as it has address taken, results will be incomplete 

Function SEXPREC* sfheaders::sfg::sfg_point<14>(Rcpp::Vector<14, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_mat as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_calculate_bbox
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_calculate_m_range
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_calculate_z_range
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_cast_sf
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_cast_sfc
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_count_new_objects
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_count_new_sfc_objects
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_fill_list
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_get_sfg_type
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_list_sizes
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_list_type
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_linestring
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_multilinestring
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_multipoint
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_multipolygon
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %34 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_point
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_polygon
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %31 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_to_df
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sf_to_df_unlist
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_boxes
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_linestring
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_linestrings
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_multilinestring
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_multilinestrings
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_multipoint
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_multipoints
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_multipolygon
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %31 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_multipolygons
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_point
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_points
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_polygon
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_polygons
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_remove_holes
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfc_to_df
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_boxes
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_dimension
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_linestring
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_linestrings
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_multilinestring
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_multilinestrings
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_multipoint
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_multipoints
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_multipolygon
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_multipolygons
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_point
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_points
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_polygon
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_polygons
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_remove_holes
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_sfg_to_df
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_to_sf
  [UP] ignoring variable <unnamed var:   %45 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %46 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _sfheaders_rcpp_unlist_list
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bool std::__1::__insertion_sort_incomplete<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function bool std::__1::__insertion_sort_incomplete<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function geometries::bbox::calculate_bbox(Rcpp::Vector<14, Rcpp::PreserveStorage>&, SEXPREC*&)
  [UP] ignoring variable s as it has address taken, results will be incomplete 

Function geometries::bbox::calculate_bbox(Rcpp::Vector<14, Rcpp::PreserveStorage>&, SEXPREC*&, Rcpp::Vector<13, Rcpp::PreserveStorage>&)
  [UP] ignoring variable s as it has address taken, results will be incomplete 

Function geometries::bbox::calculate_bbox(Rcpp::Vector<14, Rcpp::PreserveStorage>&, SEXPREC*&, Rcpp::Vector<16, Rcpp::PreserveStorage>&)
  [UP] ignoring variable s as it has address taken, results will be incomplete 

Function geometries::coordinates::geometry_dimension(SEXPREC*&, long&, long&, long&, long&, long&, unsigned int&, long, long)
  [UP] ignoring variable tmp_geom as it has address taken, results will be incomplete 

Function geometries::coordinates::geometry_dimensions(Rcpp::Vector<19, Rcpp::PreserveStorage>&)
  [UP] ignoring variable geom as it has address taken, results will be incomplete 

Function geometries::make_geometries(Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>, bool, bool)
  [UP] ignoring variable coords as it has address taken, results will be incomplete 

Function geometries::nest::nest_impl(SEXPREC*, int)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function geometries::utils::column_check(SEXPREC*, SEXPREC*)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function geometries::utils::get_sexp_unique(SEXPREC*)
  [UP] ignoring variable s as it has address taken, results will be incomplete 
  [UP] ignoring variable res as it has address taken, results will be incomplete 

Function geometries::utils::other_columns(SEXPREC*&, SEXPREC*&, SEXPREC*&)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 

Function geometries::utils::other_columns(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&)
  [UP] ignoring variable other_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable other_cols_1 as it has address taken, results will be incomplete 

Function geometries::utils::rleid_indices(Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&)
  [UP] ignoring variable jcol as it has address taken, results will be incomplete 

Function rcpp_calculate_bbox(SEXPREC*, SEXPREC*)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_calculate_m_range(SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_calculate_z_range(SEXPREC*)
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_count_new_objects(SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable sfg as it has address taken, results will be incomplete 

Function rcpp_sfc_boxes(Rcpp::Vector<19, Rcpp::PreserveStorage>)
  [UP] ignoring variable sfg as it has address taken, results will be incomplete 

Function rcpp_sfc_linestring(SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable id_col as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_sfc_multilinestring(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable line_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multiline_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_sfc_multipoint(SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable id_col as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_sfc_multipolygon(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multipolygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_sfc_point(SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_sfc_polygon(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable line_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function rcpp_sfg_boxes(SEXPREC*)
  [UP] ignoring variable sfg as it has address taken, results will be incomplete 

Function rcpp_sfg_linestring(SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable geometry_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable x2 as it has address taken, results will be incomplete 

Function rcpp_sfg_multilinestring(SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable line_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable x2 as it has address taken, results will be incomplete 

Function rcpp_sfg_multipoint(SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable x2 as it has address taken, results will be incomplete 

Function rcpp_sfg_multipolygon(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable line_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable x2 as it has address taken, results will be incomplete 

Function rcpp_sfg_point(SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable x2 as it has address taken, results will be incomplete 

Function rcpp_sfg_polygon(SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable line_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable x2 as it has address taken, results will be incomplete 

Function rcpp_sfg_to_df(SEXPREC*)
  [UP] ignoring variable sfg as it has address taken, results will be incomplete 

Function rcpp_to_sf(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable list_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable multilinestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multipoint_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multipolygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable obj as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 

Function sfheaders::api::sf_linestring(SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::api::sf_multilinestring(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multilinestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::api::sf_multipoint(SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable multipoint_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::api::sf_multipolygon(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multipolygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::api::sf_point(SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::api::sf_polygon(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool)
  [UP] ignoring variable cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::api::to_sf(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %32 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %34 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %36 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function sfheaders::cast::cast_sf(Rcpp::DataFrame_Impl<Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, SEXPREC*, bool)
  [UP] ignoring variable list_columns as it has address taken, results will be incomplete 
  [UP] ignoring variable v as it has address taken, results will be incomplete 

Function sfheaders::cast::cast_sfc(Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool)
  [UP] ignoring variable sfg as it has address taken, results will be incomplete 

Function sfheaders::cast::count_new_sfc_objects(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
  [UP] ignoring variable sfg as it has address taken, results will be incomplete 

Function sfheaders::df::get_sfc_geometry_coordinates(Rcpp::Vector<19, Rcpp::PreserveStorage>&, long&)
  [UP] ignoring variable sfci as it has address taken, results will be incomplete 

Function sfheaders::df::sf_to_df(Rcpp::DataFrame_Impl<Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Matrix<13, Rcpp::PreserveStorage>&, Rcpp::Vector<16, Rcpp::PreserveStorage>&, bool)
  [UP] ignoring variable unlisted_col as it has address taken, results will be incomplete 

Function sfheaders::df::sf_to_df(Rcpp::DataFrame_Impl<Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Matrix<13, Rcpp::PreserveStorage>&, bool)
  [UP] ignoring variable v as it has address taken, results will be incomplete 

Function sfheaders::sf::create_property_indexes(Rcpp::Vector<19, Rcpp::PreserveStorage>&)
  [UP] ignoring variable sfg as it has address taken, results will be incomplete 

Function sfheaders::sf::create_sf(Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage>&, bool)
  [UP] ignoring variable v as it has address taken, results will be incomplete 
  [UP] ignoring variable unique_ids as it has address taken, results will be incomplete 

Function sfheaders::sf::property_indexes(SEXPREC*&, long&, long&)
  [UP] ignoring variable inner_obj as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_linestring(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable ids as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_linestring(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool&)
  [UP] ignoring variable property_cols as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_multilinestring(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable ids as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_multilinestring(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool&)
  [UP] ignoring variable property_cols as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_multipoint(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable ids as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_multipoint(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool&)
  [UP] ignoring variable property_cols as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_multipolygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool)
  [UP] ignoring variable ids as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_multipolygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, bool)
  [UP] ignoring variable id_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable property_cols as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_point(SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool&)
  [UP] ignoring variable property_cols as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_polygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool)
  [UP] ignoring variable ids as it has address taken, results will be incomplete 

Function sfheaders::sf::sf_polygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool, bool)
  [UP] ignoring variable property_cols as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_linestring(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_linestrings(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_multilinestring(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_multilinestrings(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multilinestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_multipoint(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_multipoints(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable multipoint_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_multipolygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool)
  [UP] ignoring variable <unnamed var:   %49 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_multipolygons(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable multipolygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_point(SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_points(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_polygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, bool)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfc::sfc_polygons(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfg::remove_polygon_holes(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable res as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_linestring(SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_mat as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_multilinestring(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_multilinestrings(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_multipoint(SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_mat as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_multipolygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_multipolygons(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable polygon_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_point(SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_mat as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_points(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_polygon(SEXPREC*&, SEXPREC*&, SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_cols2 as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_polygon(SEXPREC*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable id_cols as it has address taken, results will be incomplete 

Function sfheaders::sfg::sfg_polygons(Rcpp::Vector<19, Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool)
  [UP] ignoring variable geometry_cols as it has address taken, results will be incomplete 
  [UP] ignoring variable linestring_id as it has address taken, results will be incomplete 
  [UP] ignoring variable x as it has address taken, results will be incomplete 

Function std::__1::enable_if<is_move_constructible<SEXPREC*>::value&&is_move_assignable<SEXPREC*>::value, void>::type std::__1::swap<SEXPREC*>(SEXPREC*&, SEXPREC*&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void std::__1::__insertion_sort_3<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function void std::__1::__insertion_sort_3<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&)
  [UP] ignoring variable __t as it has address taken, results will be incomplete 

Function void std::__1::__sift_down<Rcpp::internal::NAComparator<SEXPREC*>&, SEXPREC**>(SEXPREC**, Rcpp::internal::NAComparator<SEXPREC*>&, std::__1::iterator_traits<SEXPREC**>::difference_type, SEXPREC**)
  [UP] ignoring variable __top as it has address taken, results will be incomplete 

Function void std::__1::__sift_down<Rcpp::internal::NAComparatorGreater<SEXPREC*>&, SEXPREC**>(SEXPREC**, Rcpp::internal::NAComparatorGreater<SEXPREC*>&, std::__1::iterator_traits<SEXPREC**>::difference_type, SEXPREC**)
  [UP] ignoring variable __top as it has address taken, results will be incomplete 
