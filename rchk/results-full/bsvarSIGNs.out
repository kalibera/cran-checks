Package bsvarSIGNs version 2.0
Package built using 87674/R 4.5.0; x86_64-pc-linux-gnu; 2025-02-03 09:01:04 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_ZIRF
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:450
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:462
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:462
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:463

Function _bsvarSIGNs_ZIRF_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_bsvarSIGNs_fevd
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:304
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:316
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:316
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:317

Function _bsvarSIGNs_bsvarSIGNs_fevd_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_bsvarSIGNs_fitted_values
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:121
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:133
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:133
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:134

Function _bsvarSIGNs_bsvarSIGNs_fitted_values_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_bsvarSIGNs_hd
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:232
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:244
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:244
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:245

Function _bsvarSIGNs_bsvarSIGNs_hd_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_bsvarSIGNs_ir
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:196
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:208
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:208
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:209

Function _bsvarSIGNs_bsvarSIGNs_ir_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_bsvarSIGNs_structural_shocks
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:84
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:96
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:96
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:97

Function _bsvarSIGNs_bsvarSIGNs_structural_shocks_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_bsvar_sign_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:47
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:59
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:59
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:60

Function _bsvarSIGNs_bsvar_sign_cpp_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_extend_hyper
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_forecast_bsvarSIGNs
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:343
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:355
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:355
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:356

Function _bsvarSIGNs_forecast_bsvarSIGNs_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_g_fh
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:521
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:533
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:533
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:534

Function _bsvarSIGNs_g_fh_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_g_fh_vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:556
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:568
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:568
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:569

Function _bsvarSIGNs_g_fh_vec_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_hd1_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:270
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:282
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:282
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:283

Function _bsvarSIGNs_hd1_cpp_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_ir1_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:158
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:170
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:170
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:171

Function _bsvarSIGNs_ir1_cpp_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_dgamma
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_dinvgamma
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_ml
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_ml_dummy
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_mvgamma
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_posterior_hyper
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_prior_hyper
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_log_volume_element
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:592
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:604
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:604
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:605

Function _bsvarSIGNs_log_volume_element_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_match_sign
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:1029
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:1041
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:1041
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:1042

Function _bsvarSIGNs_match_sign_irf
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:741
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:753
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:753
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:754

Function _bsvarSIGNs_match_sign_irf_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_match_sign_narrative
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:379
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:391
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:391
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:392

Function _bsvarSIGNs_match_sign_narrative_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_match_sign_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_narrow_hyper
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_niw_cpp
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_qr_sign_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:960
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:972
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:972
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:973

Function _bsvarSIGNs_qr_sign_cpp_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_riwish_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_rmatnorm_cpp
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_rortho_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:994
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:1006
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:1006
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:1007

Function _bsvarSIGNs_rortho_cpp_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_rzeroQ
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:664
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:676
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:676
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:677

Function _bsvarSIGNs_rzeroQ_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_sample_Q
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:786
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:798
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:798
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:799

Function _bsvarSIGNs_sample_Q_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_sample_hyper
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_weight_narrative
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:415
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:427
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:427
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:428

Function _bsvarSIGNs_weight_narrative_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_weight_zero
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:629
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:641
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:641
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:642

Function _bsvarSIGNs_weight_zero_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvarSIGNs_zero_restrictions
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvarSIGNs/src/RcppExports.cpp:485
  [PB] has negative depth bsvarSIGNs/src/RcppExports.cpp:497
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvarSIGNs/src/RcppExports.cpp:497
  [PB] has possible protection stack imbalance bsvarSIGNs/src/RcppExports.cpp:498

Function _bsvarSIGNs_zero_restrictions_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bsvars::bsvars_fevd_homosk(arma::field<arma::Cube<double> >&)
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bsvars::bsvars_fitted_values(arma::Cube<double>&, arma::Cube<double>&, arma::Cube<double>&, arma::Mat<double>&)
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bsvars::bsvars_hd(arma::field<arma::Cube<double> >&, arma::Cube<double>&, bool)
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bsvars::bsvars_structural_shocks(arma::Cube<double> const&, arma::Cube<double> const&, arma::Mat<double> const&, arma::Mat<double> const&)
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bsvars::mvnrnd_cond(arma::Col<double>, arma::Col<double>, arma::Mat<double>)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bsvars::ordinal(int)
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
