Package LambertW version 0.6.7
Package built using 82396/R 4.3.0; x86_64-pc-linux-gnu; 2022-05-24 14:56:58 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 12.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
  [UP] calling allocating function Rcpp::internal::Rcpp_eval_impl(SEXPREC*, SEXPREC*) with a fresh pointer (res <arg 1>) Rcpp/include/Rcpp/Environment.h:112

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _LambertW_W_Cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr LambertW/src/RcppExports.cpp:36
  [PB] has negative depth LambertW/src/RcppExports.cpp:48
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete LambertW/src/RcppExports.cpp:48
  [PB] has possible protection stack imbalance LambertW/src/RcppExports.cpp:49

Function _LambertW_W_Cpp_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_W_delta_Cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr LambertW/src/RcppExports.cpp:71
  [PB] has negative depth LambertW/src/RcppExports.cpp:83
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete LambertW/src/RcppExports.cpp:83
  [PB] has possible protection stack imbalance LambertW/src/RcppExports.cpp:84

Function _LambertW_W_delta_Cpp_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_W_delta_alpha_Cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr LambertW/src/RcppExports.cpp:107
  [PB] has negative depth LambertW/src/RcppExports.cpp:119
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete LambertW/src/RcppExports.cpp:119
  [PB] has possible protection stack imbalance LambertW/src/RcppExports.cpp:120

Function _LambertW_W_delta_alpha_Cpp_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_W_gamma_Cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr LambertW/src/RcppExports.cpp:143
  [PB] has negative depth LambertW/src/RcppExports.cpp:155
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete LambertW/src/RcppExports.cpp:155
  [PB] has possible protection stack imbalance LambertW/src/RcppExports.cpp:156

Function _LambertW_W_gamma_Cpp_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_kurtosis
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_lp_norm_Cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_lp_norm_complex_Cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_normalize_by_tau_Cpp
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LambertW_skewness
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function lamW::lambertW0_C(Rcpp::Vector<14, Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function lamW::lambertWm1_C(Rcpp::Vector<14, Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
