Package miceadds version 3.11-6
Package built using 80923/R 4.2.0; x86_64-pc-linux-gnu; 2021-09-18 23:45:07 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 11.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<13, Rcpp::PreserveStorage> Rcpp::sample<13>(Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int, bool, Rcpp::Nullable<Rcpp::Vector<14, Rcpp::PreserveStorage> >)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_kernelpls_1dim_C
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_kernelplsaux
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_arma2vec
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:356
  [PB] has negative depth miceadds/src/RcppExports.cpp:368
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:368
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:369

Function _miceadds_miceadds_rcpp_arma2vec_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_arma_chol_ridge
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:140
  [PB] has negative depth miceadds/src/RcppExports.cpp:152
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:152
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:153

Function _miceadds_miceadds_rcpp_arma_chol_ridge_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_create_interactions
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_crossprod_one_matrix
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:882
  [PB] has negative depth miceadds/src/RcppExports.cpp:894
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:894
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:895

Function _miceadds_miceadds_rcpp_crossprod_one_matrix_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_impute_pmm6
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_compute_xtx
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:501
  [PB] has negative depth miceadds/src/RcppExports.cpp:513
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:513
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:514

Function _miceadds_miceadds_rcpp_ml_mcmc_compute_xtx_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_compute_ztz
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:537
  [PB] has negative depth miceadds/src/RcppExports.cpp:549
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:549
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:550

Function _miceadds_miceadds_rcpp_ml_mcmc_compute_ztz_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_fixed
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:572
  [PB] has negative depth miceadds/src/RcppExports.cpp:584
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:584
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:585

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_fixed_random
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:721
  [PB] has negative depth miceadds/src/RcppExports.cpp:733
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:733
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:734

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_fixed_random_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_fixed_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_random
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:644
  [PB] has negative depth miceadds/src/RcppExports.cpp:656
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:656
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:657

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_random_list
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:682
  [PB] has negative depth miceadds/src/RcppExports.cpp:694
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:694
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:695

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_random_list_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_predict_random_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_category_prob
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1226
  [PB] has negative depth miceadds/src/RcppExports.cpp:1238
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1238
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1239

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_category_prob_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_fill_index_lower
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1154
  [PB] has negative depth miceadds/src/RcppExports.cpp:1166
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1166
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1167

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_fill_index_lower_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_fill_index_upper
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1189
  [PB] has negative depth miceadds/src/RcppExports.cpp:1201
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1201
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1202

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_fill_index_upper_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_loglike
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1263
  [PB] has negative depth miceadds/src/RcppExports.cpp:1275
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1275
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1276

Function _miceadds_miceadds_rcpp_ml_mcmc_probit_loglike_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_beta
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:802
  [PB] has negative depth miceadds/src/RcppExports.cpp:814
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:814
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:815

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_beta_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_covariance_matrix
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:919
  [PB] has negative depth miceadds/src/RcppExports.cpp:931
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:931
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:932

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_covariance_matrix_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_latent_probit
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1119
  [PB] has negative depth miceadds/src/RcppExports.cpp:1131
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1131
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1132

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_latent_probit_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_psi
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:995
  [PB] has negative depth miceadds/src/RcppExports.cpp:1007
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1007
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1008

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_psi_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_sigma2
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1076
  [PB] has negative depth miceadds/src/RcppExports.cpp:1088
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1088
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1089

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_sigma2_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_thresholds
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1341
  [PB] has negative depth miceadds/src/RcppExports.cpp:1353
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1353
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1354

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_thresholds_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_u
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:848
  [PB] has negative depth miceadds/src/RcppExports.cpp:860
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:860
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:861

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_u_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %47 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_variance
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1032
  [PB] has negative depth miceadds/src/RcppExports.cpp:1044
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1044
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1045

Function _miceadds_miceadds_rcpp_ml_mcmc_sample_variance_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_sampler
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:105
  [PB] has negative depth miceadds/src/RcppExports.cpp:117
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:117
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:118

Function _miceadds_miceadds_rcpp_ml_mcmc_sampler_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %101 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_subtract_fixed
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:608
  [PB] has negative depth miceadds/src/RcppExports.cpp:620
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:620
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:621

Function _miceadds_miceadds_rcpp_ml_mcmc_subtract_fixed_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_ml_mcmc_subtract_random
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:759
  [PB] has negative depth miceadds/src/RcppExports.cpp:771
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:771
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:772

Function _miceadds_miceadds_rcpp_ml_mcmc_subtract_random_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_mvrnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:176
  [PB] has negative depth miceadds/src/RcppExports.cpp:188
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:188
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:189

Function _miceadds_miceadds_rcpp_mvrnorm_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_pnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:392
  [PB] has negative depth miceadds/src/RcppExports.cpp:404
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:404
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:405

Function _miceadds_miceadds_rcpp_pnorm_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_print_arma_mat
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:957
  [PB] has negative depth miceadds/src/RcppExports.cpp:969
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:969
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:970

Function _miceadds_miceadds_rcpp_qnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:428
  [PB] has negative depth miceadds/src/RcppExports.cpp:440
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:440
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:441

Function _miceadds_miceadds_rcpp_qnorm_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_riwishart
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:248
  [PB] has negative depth miceadds/src/RcppExports.cpp:260
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:260
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:261

Function _miceadds_miceadds_rcpp_riwishart_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_rnorm_double
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:1298
  [PB] has negative depth miceadds/src/RcppExports.cpp:1310
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:1310
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:1311

Function _miceadds_miceadds_rcpp_rnorm_double_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_rtnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:322
  [PB] has negative depth miceadds/src/RcppExports.cpp:334
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:334
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:335

Function _miceadds_miceadds_rcpp_rtnorm2
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:467
  [PB] has negative depth miceadds/src/RcppExports.cpp:479
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:479
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:480

Function _miceadds_miceadds_rcpp_rtnorm2_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_rtnorm_double
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:285
  [PB] has negative depth miceadds/src/RcppExports.cpp:297
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:297
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:298

Function _miceadds_miceadds_rcpp_rtnorm_double_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_rtnorm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_rwishart
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr miceadds/src/RcppExports.cpp:212
  [PB] has negative depth miceadds/src/RcppExports.cpp:224
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete miceadds/src/RcppExports.cpp:224
  [PB] has possible protection stack imbalance miceadds/src/RcppExports.cpp:225

Function _miceadds_miceadds_rcpp_rwishart_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_sort_partial_index
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_weighted_cor
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_weighted_pmm_match
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_weighted_pmm_match_case
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_miceadds_rcpp_weighted_sd
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_scale2_C
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _miceadds_scale2_NA_C
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
