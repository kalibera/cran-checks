Package rjsoncons version 1.3.1
Package built using 87358/R 4.5.0; x86_64-pc-linux-gnu; 2024-11-21 15:25:52 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function cpp11::package::operator[](char const*)
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::sexp j_as_r<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > >(jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >)
  [UP] ignoring variable <unnamed var:   %48 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::sexp j_as_r<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > >(jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> >)
  [UP] ignoring variable <unnamed var:   %48 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::iterator std::__1::transform<std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, j_as_r<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > >(jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >)::{lambda(jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >)#1}>(std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > const*>, std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, j_as_r<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > >(jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >)::{lambda(jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >)#1})
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::iterator std::__1::transform<std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, rquerypivot<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > >::as() const::{lambda(jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >)#1}>(std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > const*>, std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, rquerypivot<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > >::as() const::{lambda(jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >)#1})
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::iterator std::__1::transform<std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, j_as_r<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > >(jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> >)::{lambda(jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> >)#1}>(std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > const*>, std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, j_as_r<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > >(jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> >)::{lambda(jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> >)#1})
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::iterator std::__1::transform<std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, rquerypivot<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > >::as() const::{lambda(jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> >)#1}>(std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > const*>, std::__1::__wrap_iter<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > const*>, cpp11::writable::r_vector<SEXPREC*>::iterator, rquerypivot<jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> > >::as() const::{lambda(jsoncons::basic_json<char, jsoncons::sorted_policy, std::__1::allocator<char> >)#1})
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<SEXPREC*>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<cpp11::r_bool>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<cpp11::r_bool>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<cpp11::r_string>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<cpp11::r_string>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<double>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<double>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<int>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<int>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329
