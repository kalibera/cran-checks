Package squat version 0.3.0
Package built using 86189/R 4.4.0; x86_64-pc-linux-gnu; 2024-03-26 03:07:29 UTC; unix   
Checked with rchk version fdc068715daa3a256062cc20e0d4a5157dacc9a4 LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function MeanCenterMethod::GetCenter(arma::Mat<double> const&, arma::Cube<double> const&, std::__1::shared_ptr<BaseDissimilarityFunction> const&)
  [UP] ignoring variable <unnamed var:   %98 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_GeodesicQuaternionDistance
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr squat/src/RcppExports.cpp:41
  [PB] has negative depth squat/src/RcppExports.cpp:53
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete squat/src/RcppExports.cpp:53
  [PB] has possible protection stack imbalance squat/src/RcppExports.cpp:54

Function _squat_GeodesicQuaternionDistance_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_GetCostMatrix
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_GetGeodesicMean
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr squat/src/RcppExports.cpp:113
  [PB] has negative depth squat/src/RcppExports.cpp:125
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete squat/src/RcppExports.cpp:125
  [PB] has possible protection stack imbalance squat/src/RcppExports.cpp:126

Function _squat_GetGeodesicMean_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_RegularizeGrid
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr squat/src/RcppExports.cpp:79
  [PB] has negative depth squat/src/RcppExports.cpp:91
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete squat/src/RcppExports.cpp:91
  [PB] has possible protection stack imbalance squat/src/RcppExports.cpp:92

Function _squat_RegularizeGrid_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_centring_qts_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_derivative_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_exp_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_gmean
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr squat/src/RcppExports.cpp:381
  [PB] has negative depth squat/src/RcppExports.cpp:393
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete squat/src/RcppExports.cpp:393
  [PB] has possible protection stack imbalance squat/src/RcppExports.cpp:394

Function _squat_gmean_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_gmedian
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr squat/src/RcppExports.cpp:417
  [PB] has negative depth squat/src/RcppExports.cpp:429
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete squat/src/RcppExports.cpp:429
  [PB] has possible protection stack imbalance squat/src/RcppExports.cpp:430

Function _squat_gmedian_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_hemispherize_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_inverse_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_log_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_mean_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_median_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_moving_average_qts_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_multiply_qts_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_normalize_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_qts2aats_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_qts2ats_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_qts2avts_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_qts2dts_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_qts2nts_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_reorient_qts_impl
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_resample_qts_impl
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _squat_smooth_qts_impl
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
