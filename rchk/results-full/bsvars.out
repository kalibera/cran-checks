Package bsvars version 1.0.0
Package built using 82799/R 4.3.0; x86_64-pc-linux-gnu; 2022-09-04 15:13:07 UTC; unix   
Checked with rchk version 29e18222e1cfa67ba8e63bd3b22a25f78593c554 LLVM version 14.0.0
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvars_bsvar_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvars/src/RcppExports.cpp:43
  [PB] has negative depth bsvars/src/RcppExports.cpp:55
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvars/src/RcppExports.cpp:55
  [PB] has possible protection stack imbalance bsvars/src/RcppExports.cpp:56

Function _bsvars_bsvar_cpp_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %32 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvars_bsvar_msh_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvars/src/RcppExports.cpp:87
  [PB] has negative depth bsvars/src/RcppExports.cpp:99
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvars/src/RcppExports.cpp:99
  [PB] has possible protection stack imbalance bsvars/src/RcppExports.cpp:100

Function _bsvars_bsvar_msh_cpp_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvars_bsvar_sv_cpp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvars/src/RcppExports.cpp:129
  [PB] has negative depth bsvars/src/RcppExports.cpp:141
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvars/src/RcppExports.cpp:141
  [PB] has possible protection stack imbalance bsvars/src/RcppExports.cpp:142

Function _bsvars_bsvar_sv_cpp_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %35 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvars_logSDDR_homoskedasticity
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvars/src/RcppExports.cpp:201
  [PB] has negative depth bsvars/src/RcppExports.cpp:213
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvars/src/RcppExports.cpp:213
  [PB] has possible protection stack imbalance bsvars/src/RcppExports.cpp:214

Function _bsvars_logSDDR_homoskedasticity_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _bsvars_normalisation_wz2003
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr bsvars/src/RcppExports.cpp:163
  [PB] has negative depth bsvars/src/RcppExports.cpp:175
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bsvars/src/RcppExports.cpp:175
  [PB] has possible protection stack imbalance bsvars/src/RcppExports.cpp:176
