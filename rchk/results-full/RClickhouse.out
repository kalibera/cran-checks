Package RClickhouse version 0.6.3
Package built using 82396/R 4.3.0; x86_64-pc-linux-gnu; 2022-05-24 15:43:01 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 12.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_clearResult
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:64
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:76
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:76
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:77

Function _RClickhouse_connect
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:273
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:285
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:285
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:286

Function _RClickhouse_connect_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_disconnect
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:306
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:318
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:318
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:319

Function _RClickhouse_fetch
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:31
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:43
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:43
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:44

Function _RClickhouse_fetch_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_getRowCount
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:132
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:144
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:144
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:145

Function _RClickhouse_getRowCount_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_getRowsAffected
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:166
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:178
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:178
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:179

Function _RClickhouse_getRowsAffected_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_getStatement
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:200
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:212
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:212
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:213

Function _RClickhouse_getStatement_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_hasCompleted
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:98
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:110
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:110
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:111

Function _RClickhouse_hasCompleted_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_insert
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:376
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:388
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:388
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:389

Function _RClickhouse_resultTypes
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:234
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:246
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:246
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:247

Function _RClickhouse_resultTypes_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_select
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:341
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:353
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:353
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:354

Function _RClickhouse_select_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_validPtr
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:410
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:422
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:422
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:423

Function _RClickhouse_validPtr_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<16, Rcpp::PreserveStorage>::push_back<Rcpp::String>(Rcpp::String const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<16, Rcpp::PreserveStorage>::push_back<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<13, Rcpp::PreserveStorage> >(Rcpp::Vector<13, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<14, Rcpp::PreserveStorage> >(Rcpp::Vector<14, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<16, Rcpp::PreserveStorage> >(Rcpp::Vector<16, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<19, Rcpp::PreserveStorage> >(Rcpp::Vector<19, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::newDateVector>(Rcpp::newDateVector const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::newDatetimeVector>(Rcpp::newDatetimeVector const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
