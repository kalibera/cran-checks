Package BeSS version 2.0.3
Package built using 80204/R 4.2.0; x86_64-pc-linux-gnu; 2021-04-22 14:12:11 UTC; unix   
Checked with rchk version 3d653b7c8f92dac912532856b55f44d2986c6553 LLVM version 10.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_EigenR
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:148
  [PB] has negative depth BeSS/src/RcppExports.cpp:160
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:160
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:161

Function _BeSS_EigenR_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_bess_lm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:35
  [PB] has negative depth BeSS/src/RcppExports.cpp:47
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:47
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:48

Function _BeSS_bess_lm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_gbess_lm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:193
  [PB] has negative depth BeSS/src/RcppExports.cpp:205
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:205
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:206

Function _BeSS_gbess_lm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_get_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:75
  [PB] has negative depth BeSS/src/RcppExports.cpp:87
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:87
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:88

Function _BeSS_get_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_getcox_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:114
  [PB] has negative depth BeSS/src/RcppExports.cpp:126
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:126
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:127

Function _BeSS_getcox_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_gget_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:238
  [PB] has negative depth BeSS/src/RcppExports.cpp:250
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:250
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:251

Function _BeSS_gget_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_ggetcox_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:282
  [PB] has negative depth BeSS/src/RcppExports.cpp:294
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:294
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:295

Function _BeSS_ggetcox_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
