Package BeSS version 2.0.4
Package built using 87687/R 4.5.0; x86_64-pc-linux-gnu; 2025-02-06 00:27:32 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_EigenR
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:153
  [PB] has negative depth BeSS/src/RcppExports.cpp:165
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:165
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:166

Function _BeSS_EigenR_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_bess_lm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:40
  [PB] has negative depth BeSS/src/RcppExports.cpp:52
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:52
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:53

Function _BeSS_bess_lm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_gbess_lm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:198
  [PB] has negative depth BeSS/src/RcppExports.cpp:210
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:210
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:211

Function _BeSS_gbess_lm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_get_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:80
  [PB] has negative depth BeSS/src/RcppExports.cpp:92
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:92
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:93

Function _BeSS_get_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_getcox_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:119
  [PB] has negative depth BeSS/src/RcppExports.cpp:131
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:131
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:132

Function _BeSS_getcox_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_gget_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:243
  [PB] has negative depth BeSS/src/RcppExports.cpp:255
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:255
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:256

Function _BeSS_gget_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_ggetcox_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:287
  [PB] has negative depth BeSS/src/RcppExports.cpp:299
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:299
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:300

Function _BeSS_ggetcox_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
