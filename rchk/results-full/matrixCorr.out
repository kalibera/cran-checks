Package matrixCorr version 0.5.1
Package built using 88872/R 4.6.0; x86_64-pc-linux-gnu; 2025-09-27 05:26:48 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_ba_openmp_threads
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_bicor_matrix_cpp
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_bicor_matrix_pairwise_cpp
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_bicor_matrix_weighted_cpp
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_bicor_matrix_weighted_pairwise_cpp
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_bicor_vec_cpp
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_bland_altman_cpp
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_bland_altman_repeated_em_ext_cpp
  [UP] ignoring variable <unnamed var:   %45 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_build_L_Dm_Z_cpp
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_build_L_Dm_cpp
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_cccUst_rcpp
  [UP] ignoring variable <unnamed var:   %39 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_ccc_cpp
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_ccc_vc_cpp
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_ccc_with_ci_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_get_omp_threads
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_kendall_matrix_cpp
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_kendall_tau2_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_kendall_tau2_from_mat_cpp
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_matrixCorr_biserial_latent_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_matrixCorr_polychoric_mle_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_matrixCorr_polydi_mle_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_matrixCorr_polyserial_mle_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_matrixCorr_tetrachoric_mle_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_openmp_threads
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_partial_correlation_cpp
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_pearson_matrix_cpp
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_spearman_matrix_cpp
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_sss_cor_cpp
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_ustat_dcor
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_ustat_dcor_matrix_cpp
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _matrixCorr_validate_corr_input_cpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function bland_altman_cpp(Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<14, Rcpp::PreserveStorage>, double, int, double)
  [UP] ignoring variable <unnamed var:   %71 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %75 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function build_L_Dm_Z_cpp(Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Nullable<Rcpp::Vector<16, Rcpp::PreserveStorage> >, Rcpp::Nullable<Rcpp::Vector<16, Rcpp::PreserveStorage> >, Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Vector<16, Rcpp::PreserveStorage>, bool, Rcpp::Nullable<Rcpp::Matrix<14, Rcpp::PreserveStorage> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Rcpp::Nullable<Rcpp::Vector<14, Rcpp::PreserveStorage> >, Rcpp::Nullable<Rcpp::Vector<13, Rcpp::PreserveStorage> >, bool)
  [UP] ignoring variable <unnamed var:   %95 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function build_L_Dm_cpp(Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Nullable<Rcpp::Vector<16, Rcpp::PreserveStorage> >, Rcpp::Nullable<Rcpp::Vector<16, Rcpp::PreserveStorage> >, Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Vector<16, Rcpp::PreserveStorage>, bool, Rcpp::Nullable<Rcpp::Matrix<14, Rcpp::PreserveStorage> >)
  [UP] ignoring variable <unnamed var:   %113 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %117 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %164 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %168 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function ccc_vc_cpp(Rcpp::Matrix<14, Rcpp::PreserveStorage>, Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, int, int, int, double, double, int, Rcpp::Nullable<Rcpp::Matrix<14, Rcpp::PreserveStorage> >, Rcpp::Nullable<Rcpp::Matrix<14, Rcpp::PreserveStorage> >, Rcpp::Nullable<Rcpp::Matrix<14, Rcpp::PreserveStorage> >, bool, double, bool, bool, double, bool, Rcpp::Nullable<Rcpp::Vector<14, Rcpp::PreserveStorage> >)
  [UP] ignoring variable sigma2_extra as it has address taken, results will be incomplete 

Function validate_corr_input_cpp(SEXPREC*, bool)
  [UP] ignoring variable cn as it has address taken, results will be incomplete 
