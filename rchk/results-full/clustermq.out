Package clustermq version 0.9.6
Package built using 87576/R 4.5.0; x86_64-pc-linux-gnu; 2025-01-16 23:50:27 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function CMQMaster::add_env(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, SEXPREC*)
  [UP] calling allocating function r2msg(SEXPREC*) with argument allocated using SEXPREC* Rcpp::Function_Impl<Rcpp::PreserveStorage>::operator()<SEXPREC*, SEXPREC*>(SEXPREC* const&, SEXPREC* const&) const clustermq/src/./CMQMaster.h:168

Function CMQMaster::current()
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function CMQMaster::list_env() const
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %19 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function CMQMaster::list_workers() const
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function CMQMaster::register_peer(std::__1::vector<zmq::message_t, std::__1::allocator<zmq::message_t> >&)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function CMQMaster::send(SEXPREC*)
  [UP] ignoring variable cmd as it has address taken, results will be incomplete 

Function CMQProxy::proxy_request_cmd()
  [UP] calling allocating function r2msg(SEXPREC*) with argument allocated using Rcpp::Function_Impl<Rcpp::PreserveStorage>::operator()() const clustermq/src/./CMQProxy.h:49
  [UP] calling allocating function r2msg(SEXPREC*) with argument allocated using Rcpp::Function_Impl<Rcpp::PreserveStorage>::operator()() const clustermq/src/./CMQProxy.h:50

Function CMQWorker::connect(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int)
  [UP] calling allocating function r2msg(SEXPREC*) with argument allocated using Rcpp::Function_Impl<Rcpp::PreserveStorage>::operator()() const clustermq/src/./CMQWorker.h:29
  [UP] calling allocating function r2msg(SEXPREC*) with argument allocated using Rcpp::Function_Impl<Rcpp::PreserveStorage>::operator()() const clustermq/src/./CMQWorker.h:30

Function CMQWorker::process_one()
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::assign(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, SEXPREC*) const with argument allocated using msg2r(zmq::message_t const&&, bool) clustermq/src/./CMQWorker.h:94

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::namespace_env(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::class_<CMQMaster>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<CMQProxy>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<CMQWorker>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function SEXPREC* Rcpp::internal::call_impl<Rcpp::CppMethodImplN<false, CMQMaster, SEXPREC*, int>::operator()(CMQMaster*, SEXPREC**)::{lambda(int)#1}, SEXPREC*, int, 0, (void*)0>(Rcpp::CppMethodImplN<false, CMQMaster, SEXPREC*, int>::operator()(CMQMaster*, SEXPREC**)::{lambda(int)#1} const&, SEXPREC**, Rcpp::internal::type_pack<SEXPREC*, int>, Rcpp::traits::index_sequence<0>)
  [UP] ignoring variable res as it has address taken, results will be incomplete 

Function SEXPREC* Rcpp::internal::call_impl<Rcpp::CppMethodImplN<false, CMQProxy, SEXPREC*>::operator()(CMQProxy*, SEXPREC**)::{lambda()#1}, SEXPREC*, , , (void*)0>(Rcpp::CppMethodImplN<false, CMQProxy, SEXPREC*>::operator()(CMQProxy*, SEXPREC**)::{lambda()#1} const&, SEXPREC**, Rcpp::internal::type_pack<SEXPREC*>, Rcpp::traits::index_sequence<>)
  [UP] ignoring variable res as it has address taken, results will be incomplete 

Function SEXPREC* Rcpp::internal::call_impl<Rcpp::CppMethodImplN<true, CMQMaster, SEXPREC*>::operator()(CMQMaster*, SEXPREC**)::{lambda()#1}, SEXPREC*, , , (void*)0>(Rcpp::CppMethodImplN<true, CMQMaster, SEXPREC*>::operator()(CMQMaster*, SEXPREC**)::{lambda()#1} const&, SEXPREC**, Rcpp::internal::type_pack<SEXPREC*>, Rcpp::traits::index_sequence<>)
  [UP] ignoring variable res as it has address taken, results will be incomplete 

Function _clustermq_has_connectivity
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _clustermq_libzmq_has_draft
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function msg2r(zmq::message_t const&&, bool)
  [UP] ignoring variable ans as it has address taken, results will be incomplete 

Function r2msg(SEXPREC*)
  [UP] ignoring variable data as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::RObject_Impl<Rcpp::PreserveStorage> >(Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
