Package PartialNetwork version 1.1.1
Package built using 88882/R 4.6.0; x86_64-pc-linux-gnu; 2025-09-28 23:45:20 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_Graph
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_Prob
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_dnetwork1
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_dnetwork2
  [UP] ignoring variable <unnamed var:   %45 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_dvMFcpp
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fGnormalise
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fListIndex
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta0
  [UP] ignoring variable <unnamed var:   %57 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta0fe
  [UP] ignoring variable <unnamed var:   %57 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta0nc
  [UP] ignoring variable <unnamed var:   %54 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta0ncfe
  [UP] ignoring variable <unnamed var:   %54 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta2
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta2fe
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta2nc
  [UP] ignoring variable <unnamed var:   %54 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_falbeta2ncfe
  [UP] ignoring variable <unnamed var:   %54 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta1
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta1fe
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta1nc
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta1ncfe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta3
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta3fe
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta3nc
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fbeta3ncfe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fdnetARD
  [UP] ignoring variable <unnamed var:   %48 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm1
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm1fe
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm1nc
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm1ncfe
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm3
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm3fe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm3nc
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fgmm3ncfe
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_flistGnorm1
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_flistGnorm1nc
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_flistGnorm2
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_flistGnorm2nc
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_flspacerho1
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_flspacerho2
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta0
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta0fe
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta0nc
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta0ncfe
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta1
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta1fe
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta1nc
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta1ncfe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta2
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta2fe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta2nc
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta2ncfe
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta3
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta3fe
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta3nc
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzeta3ncfe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH0
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH0fe
  [UP] ignoring variable <unnamed var:   %63 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH0nc
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH0ncfe
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH1
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH1fe
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH1nc
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH1ncfe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH2
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH2fe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH2nc
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH2ncfe
  [UP] ignoring variable <unnamed var:   %60 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH3
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH3fe
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH3nc
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_fmvzetaH3ncfe
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_frMceiltoV
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_frMtoV
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_frVtoM
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_frVtoMnorm
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_instruments1
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_instruments2
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_logCpvMFcpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMC_ard
  [UP] ignoring variable <unnamed var:   %117 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMC_none
  [UP] ignoring variable <unnamed var:   %78 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMC_pl
  [UP] ignoring variable <unnamed var:   %111 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCblock_ard
  [UP] ignoring variable <unnamed var:   %120 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCblock_none
  [UP] ignoring variable <unnamed var:   %81 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCblock_pl
  [UP] ignoring variable <unnamed var:   %114 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCblocknoc_ard
  [UP] ignoring variable <unnamed var:   %114 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCblocknoc_none
  [UP] ignoring variable <unnamed var:   %75 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCblocknoc_pl
  [UP] ignoring variable <unnamed var:   %108 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCnoc_ard
  [UP] ignoring variable <unnamed var:   %111 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCnoc_none
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_peerMCMCnoc_pl
  [UP] ignoring variable <unnamed var:   %105 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_rem_non_fin
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_rvMFcpp
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_sartpoint
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_sartpointnoc
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_simG
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_simGnorm
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _PartialNetwork_updateGP
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMC_ard(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, arma::Col<double> const&, int const&)
  [UP] ignoring variable <unnamed var:   %452 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMC_none(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, arma::Col<double> const&, int const&, double const&, double const&, double const&, double const&, int const&)
  [UP] ignoring variable <unnamed var:   %324 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMC_pl(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, arma::Mat<double> const&, Rcpp::Vector<14, Rcpp::PreserveStorage>, arma::Col<double> const&, arma::Mat<double> const&, int const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, int const&, int const&, bool const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&)
  [UP] ignoring variable <unnamed var:   %409 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %410 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %450 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %455 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCblock_ard(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, arma::Col<double> const&, int const&, int const&)
  [UP] ignoring variable <unnamed var:   %454 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %493 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %506 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCblock_none(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, arma::Col<double> const&, int const&, double const&, double const&, double const&, double const&, int const&, int const&)
  [UP] ignoring variable <unnamed var:   %326 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCblock_pl(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, Rcpp::Vector<14, Rcpp::PreserveStorage>, arma::Mat<double> const&, arma::Col<double>, arma::Mat<double> const&, int const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, int const&, int const&, int const&, bool const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&)
  [UP] ignoring variable <unnamed var:   %410 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %411 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %451 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %456 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCblocknoc_ard(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, arma::Col<double> const&, int const&, int const&)
  [UP] ignoring variable <unnamed var:   %369 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %393 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %406 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCblocknoc_none(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, arma::Col<double> const&, int const&, double const&, double const&, double const&, double const&, int const&, int const&)
  [UP] ignoring variable <unnamed var:   %241 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCblocknoc_pl(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, Rcpp::Vector<14, Rcpp::PreserveStorage>, arma::Mat<double> const&, arma::Col<double> const&, arma::Mat<double> const&, int const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, int const&, int const&, int const&, bool const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&)
  [UP] ignoring variable <unnamed var:   %326 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %327 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %352 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %357 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCnoc_ard(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, arma::Col<double> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, arma::Col<double> const&, int const&)
  [UP] ignoring variable <unnamed var:   %367 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %391 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %404 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCnoc_none(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, arma::Col<double> const&, int const&, double const&, double const&, double const&, double const&, int const&)
  [UP] ignoring variable <unnamed var:   %239 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function peerMCMCnoc_pl(Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&, int const&, Rcpp::Vector<13, Rcpp::PreserveStorage> const&, int const&, arma::Col<double> const&, arma::Mat<double> const&, double const&, double const&, double const&, double const&, Rcpp::Vector<14, Rcpp::PreserveStorage>, arma::Mat<double> const&, arma::Col<double> const&, arma::Mat<double> const&, int const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, arma::Col<double> const&, int const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, double const&, int const&, int const&, bool const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&)
  [UP] ignoring variable <unnamed var:   %324 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %325 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %350 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %355 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
