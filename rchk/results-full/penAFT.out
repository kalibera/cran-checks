Package penAFT version 0.2.0
Package built using 82396/R 4.3.0; x86_64-pc-linux-gnu; 2022-05-24 15:06:25 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 12.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function ADMM_ENrun(arma::Col<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, double, double, double, double, double, arma::Col<double> const&, arma::Col<double>, arma::Col<double> const&, arma::Col<double>, unsigned int, double, double, double, double)
  [UP] ignoring variable <unnamed var:   %476 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %480 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %484 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %488 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %492 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function ADMM_SGrun(arma::Col<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double>, double, double, double, double, double, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double>, arma::Col<double> const&, arma::Col<double>, unsigned int, double, double, double, double, unsigned int, unsigned int, unsigned int, int)
  [UP] ignoring variable <unnamed var:   %561 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %565 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %569 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %573 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %577 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _penAFT_ADMM_ENrun
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _penAFT_ADMM_SGrun
  [UP] ignoring variable <unnamed var:   %87 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
