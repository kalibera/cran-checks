Package penAFT version 0.3.2
Package built using 88872/R 4.6.0; x86_64-pc-linux-gnu; 2025-09-27 05:32:56 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function ADMM_ENrun(arma::Col<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, double, double, double, double, double, arma::Col<double> const&, arma::Col<double>, arma::Col<double> const&, arma::Col<double>, unsigned int, double, double, double, double)
  [UP] ignoring variable <unnamed var:   %474 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %478 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %482 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %486 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %490 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function ADMM_SGrun(arma::Col<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double> const&, arma::Mat<double>, double, double, double, double, double, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double> const&, arma::Col<double>, arma::Col<double> const&, arma::Col<double>, unsigned int, double, double, double, double, unsigned int, unsigned int, unsigned int, int)
  [UP] ignoring variable <unnamed var:   %559 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %563 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %567 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %571 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %575 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _penAFT_ADMM_ENrun
  [UP] ignoring variable <unnamed var:   %69 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _penAFT_ADMM_SGrun
  [UP] ignoring variable <unnamed var:   %87 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
