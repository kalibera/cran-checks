Package bnlearn version 4.7.1
Package built using 82396/R 4.3.0; x86_64-pc-linux-gnu; 2022-05-24 10:30:35 UTC; unix   
Checked with rchk version 35d5d01a98903a5f3e9ec166dcdb2f790ecb784f LLVM version 12.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function arcs2uelist
  [PB] has negative depth bnlearn/src/arcs2elist.c:200
  [UP] attempt to unprotect more items (3) than protected (2), results will be incomplete bnlearn/src/arcs2elist.c:200
  [PB] has possible protection stack imbalance bnlearn/src/arcs2elist.c:204

Function arcs2welist
  [PB] has negative depth bnlearn/src/arcs2elist.c:111
  [UP] attempt to unprotect more items (3) than protected (2), results will be incomplete bnlearn/src/arcs2elist.c:111
  [PB] has possible protection stack imbalance bnlearn/src/arcs2elist.c:115

Function bn_recovery
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unprotected variable elnames while calling allocating function Rf_allocVector bnlearn/src/bn.recovery.c:109
  [UP] unprotected variable fixed while calling allocating function Rf_allocVector bnlearn/src/bn.recovery.c:109
  [UP] unprotected variable fixed while calling allocating function Rf_setAttrib(V,S:names,?) bnlearn/src/bn.recovery.c:111
  [UP] unprotected variable fixed while calling allocating function Rf_setAttrib(V,S:names,V) bnlearn/src/bn.recovery.c:111
  [UP] unprotected variable fixed while calling allocating function getListElement bnlearn/src/bn.recovery.c:114
  [UP] unprotected variable fixed while calling allocating function getListElement bnlearn/src/bn.recovery.c:115
  [UP] unprotected variable elnames while calling allocating function Rf_allocVector bnlearn/src/bn.recovery.c:127
  [UP] unprotected variable fixed while calling allocating function Rf_allocVector bnlearn/src/bn.recovery.c:127
  [UP] unprotected variable temp while calling allocating function Rf_allocVector bnlearn/src/bn.recovery.c:127
  [PB] has negative depth bnlearn/src/bn.recovery.c:143
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete bnlearn/src/bn.recovery.c:143
  [PB] has negative depth bnlearn/src/bn.recovery.c:150
  [UP] attempt to unprotect more items (2) than protected (0), results will be incomplete bnlearn/src/bn.recovery.c:150
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete bnlearn/src/bn.recovery.c:150
  [PB] has negative depth bnlearn/src/bn.recovery.c:152
  [UP] attempt to unprotect more items (3) than protected (0), results will be incomplete bnlearn/src/bn.recovery.c:152
  [UP] attempt to unprotect more items (3) than protected (1), results will be incomplete bnlearn/src/bn.recovery.c:152
  [UP] attempt to unprotect more items (3) than protected (2), results will be incomplete bnlearn/src/bn.recovery.c:152
  [PB] has possible protection stack imbalance bnlearn/src/bn.recovery.c:158

Function c_dataframe_column
  [UP] calling allocating function Rf_match with a fresh pointer (colnames <arg 1>) bnlearn/src/data.frame.c:59
  [PB] has negative depth bnlearn/src/data.frame.c:105
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/data.frame.c:105
  [PB] has possible protection stack imbalance bnlearn/src/data.frame.c:109

Function c_gloss
  [PB] has negative depth bnlearn/src/loss.c:217
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/loss.c:217
  [PB] has possible protection stack imbalance bnlearn/src/loss.c:222

Function c_rbn_master
  [UP] calling allocating function Rf_match with argument allocated using Rf_getAttrib(?,S:names) bnlearn/src/rbn.c:54
  [PB] has an unsupported form of unprotect with a variable results will be incomplete bnlearn/src/rbn.c:218
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete bnlearn/src/rbn.c:218

Function cdpred
  [PB] has negative depth bnlearn/src/predict.c:326
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete bnlearn/src/predict.c:326
  [PB] has possible protection stack imbalance bnlearn/src/predict.c:341

Function chow_liu
  [PB] has negative depth bnlearn/src/mi.matrix.c:447
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/mi.matrix.c:447
  [PB] has possible protection stack imbalance bnlearn/src/mi.matrix.c:468

Function dpred
  [PB] has negative depth bnlearn/src/predict.c:178
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete bnlearn/src/predict.c:178
  [PB] has possible protection stack imbalance bnlearn/src/predict.c:192

Function entropy_loss
  [PB] has negative depth bnlearn/src/loss.c:49
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/loss.c:49
  [PB] has possible protection stack imbalance bnlearn/src/loss.c:51

Function fast_cglm
  [PB] has an unsupported form of unprotect with a variable - binary add results will be incomplete bnlearn/src/fast.lm.c:150
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete bnlearn/src/fast.lm.c:150

Function fast_lm
  [PB] has an unsupported form of unprotect with a variable - binary add results will be incomplete bnlearn/src/fast.lm.c:67
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete bnlearn/src/fast.lm.c:67

Function hc_to_be_added
  [PB] has negative depth bnlearn/src/hc.cache.lookup.c:471
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete bnlearn/src/hc.cache.lookup.c:471
  [PB] has negative depth bnlearn/src/hc.cache.lookup.c:480
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/hc.cache.lookup.c:480
  [PB] has possible protection stack imbalance bnlearn/src/hc.cache.lookup.c:485

Function joint_discretize
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete bnlearn/src/discretize.c:563
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete bnlearn/src/discretize.c:563

Function mappred
  [UP] calling allocating function Rf_match with a fresh pointer (colnames <arg 1>) bnlearn/src/map.lw.c:107
  [PB] has negative depth bnlearn/src/map.lw.c:262
  [UP] attempt to unprotect more items (5) than protected (4), results will be incomplete bnlearn/src/map.lw.c:262
  [PB] has possible protection stack imbalance bnlearn/src/map.lw.c:271

Function naivepred
  [PB] has negative depth bnlearn/src/predict.c:653
  [UP] attempt to unprotect more items (3) than protected (2), results will be incomplete bnlearn/src/predict.c:653
  [PB] has possible protection stack imbalance bnlearn/src/predict.c:670

Function normalize_cpt
  [PB] has negative depth bnlearn/src/common.c:173
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/common.c:173
  [PB] has possible protection stack imbalance bnlearn/src/common.c:175

Function nparams_fitted
  [PB] has negative depth bnlearn/src/nparams.c:169
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/nparams.c:169
  [PB] has possible protection stack imbalance bnlearn/src/nparams.c:171

Function subset_by_name
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] allocating function Rf_match may destroy its unprotected argument (vec_names <arg 1>), which is later used. bnlearn/src/common.c:263
  [UP] calling allocating function Rf_match with a fresh pointer (vec_names <arg 1>) bnlearn/src/common.c:263
  [UP] unprotected variable subvec while calling allocating function Rf_match bnlearn/src/common.c:263
  [PB] has negative depth bnlearn/src/common.c:301
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete bnlearn/src/common.c:301
  [PB] has negative depth bnlearn/src/common.c:306
  [UP] attempt to unprotect more items (3) than protected (0), results will be incomplete bnlearn/src/common.c:306
  [UP] attempt to unprotect more items (3) than protected (1), results will be incomplete bnlearn/src/common.c:306
  [UP] attempt to unprotect more items (3) than protected (2), results will be incomplete bnlearn/src/common.c:306
  [PB] has possible protection stack imbalance bnlearn/src/common.c:308

Function tiers
  [PB] has negative depth bnlearn/src/tiers.c:95
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete bnlearn/src/tiers.c:95
  [PB] has possible protection stack imbalance bnlearn/src/tiers.c:99
