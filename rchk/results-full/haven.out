Package haven version 2.5.4
Package built using 87358/R 4.5.0; x86_64-pc-linux-gnu; 2024-11-21 17:08:09 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function DfReader::createVariable(int, readstat_variable_s*, char const*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function DfReader::resizeCols(int)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function DfReader::setValue(int, readstat_variable_s*, readstat_value_s)
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::r_vector<SEXPREC*> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::r_vector<cpp11::r_string> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::r_vector<double> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::r_vector<int> >::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::attribute_proxy<cpp11::sexp>::operator SEXPREC*() const
  [UP] ignoring variable <unnamed var:   %4 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::package::operator[](char const*)
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<SEXPREC*>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<cpp11::r_string>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<cpp11::r_string>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<double>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<double>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<int>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<int>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329
