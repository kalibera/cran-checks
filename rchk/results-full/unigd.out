Package unigd version 0.1.2
Package built using 87358/R 4.5.0; x86_64-pc-linux-gnu; 2024-11-21 16:23:23 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function _unigd_unigd_render_
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::named_arg& cpp11::named_arg::operator=<SEXPREC*>(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function cpp11::package::operator[](char const*)
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::erase(long)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::r_vector(std::initializer_list<cpp11::named_arg>)::{lambda()#1}::operator()() const
  [UP] unprotected variable names while calling allocating function Rf_mkCharCE cpp11/include/cpp11/list.hpp:91

Function cpp11::writable::r_vector<SEXPREC*>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<SEXPREC*>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<cpp11::r_bool>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<cpp11::r_bool>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<cpp11::r_string>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<cpp11::r_string>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<int>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<int>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp11::writable::r_vector<unsigned char>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<unsigned char>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function unigd::PlotHistory::play(long, _DevDesc*)
  [UP] ignoring variable snap as it has address taken, results will be incomplete 

Function unigd::PlotHistory::put(long, SEXPREC*)
  [UP] ignoring variable t_snapshot as it has address taken, results will be incomplete 

Function unigd::generic_dev<unigd::unigd_device>::setup(unigd::generic_dev<unigd::unigd_device>::device_container*)::{lambda(SEXPREC*)#1}::operator()(SEXPREC*) const
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %38 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable t_cap as it has address taken, results will be incomplete 

Function unigd_id_(int, int, int)
  [UP] ignoring variable <unnamed var:   %32 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
