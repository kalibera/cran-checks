Package fastplyr version 0.4.0
Package built using 87358/R 4.5.0; x86_64-pc-linux-gnu; 2024-11-21 17:45:23 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function _fastplyr_cpp_consecutive_id
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_df_group_indices
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_fill_grouped
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_frame_addresses_equal
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_frame_dims
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_group_locs
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_grouped_run_id
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_list_subset
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_r_address
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_row_id
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_set_list_element
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_set_replace
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_slice_locs
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_sorted_group_starts
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_unlist_group_locs
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _fastplyr_cpp_which_all
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::package::operator[](char const*)
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function cpp11::writable::r_vector<SEXPREC*>::reserve_data(SEXPREC*, bool, long)
  [UP] calling allocating function cpp11::writable::r_vector<SEXPREC*>::resize_names(SEXPREC*, long) with a fresh pointer (names <arg 1>) cpp11/include/cpp11/r_vector.hpp:1329

Function cpp_df_run_id(cpp11::writable::r_vector<SEXPREC*>)
  [UP] ignoring variable group_ids as it has address taken, results will be incomplete 
