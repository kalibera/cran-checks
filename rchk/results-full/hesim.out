Package hesim version 0.5.0
Package built using 80081/R 4.1.0; x86_64-pc-linux-gnu; 2021-03-08 14:49:26 UTC; unix   
Checked with rchk version 3d653b7c8f92dac912532856b55f44d2986c6553 LLVM version 10.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
  [UP] calling allocating function Rcpp::internal::Rcpp_eval_impl(SEXPREC*, SEXPREC*) with a fresh pointer (res <arg 1>) Rcpp/include/Rcpp/Environment.h:112

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Reference_Impl<Rcpp::PreserveStorage>::Reference_Impl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rcpp::internal::get_Rcpp_namespace() Rcpp/include/Rcpp/Reference.h:63

Function Rcpp::Vector<10, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<10, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function Rcpp::Vector<13, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<13, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<13>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:74

Function Rcpp::Vector<13, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<13, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<14>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:74

Function Rcpp::Vector<16, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<16, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<16>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:74

Function Rcpp::Vector<16, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<16, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector()
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:57

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::distribution>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::distribution> >(Rcpp::CppProperty<hesim::stats::distribution>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::distribution>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::distribution>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::distribution> >(Rcpp::CppProperty<hesim::stats::distribution>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::exponential> >(Rcpp::CppProperty<hesim::stats::exponential>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::exponential>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::exponential> >(Rcpp::CppProperty<hesim::stats::exponential>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::fracpoly>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::fracpoly> >(Rcpp::CppProperty<hesim::stats::fracpoly>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::fracpoly>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::fracpoly>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::fracpoly> >(Rcpp::CppProperty<hesim::stats::fracpoly>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::gamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::gamma> >(Rcpp::CppProperty<hesim::stats::gamma>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::gamma>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::gamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::gamma> >(Rcpp::CppProperty<hesim::stats::gamma>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::gengamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::gengamma> >(Rcpp::CppProperty<hesim::stats::gengamma>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::gengamma>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::gengamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::gengamma> >(Rcpp::CppProperty<hesim::stats::gengamma>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::gompertz>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::gompertz> >(Rcpp::CppProperty<hesim::stats::gompertz>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::gompertz>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::gompertz>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::gompertz> >(Rcpp::CppProperty<hesim::stats::gompertz>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::loglogistic>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::loglogistic> >(Rcpp::CppProperty<hesim::stats::loglogistic>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::loglogistic>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::loglogistic>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::loglogistic> >(Rcpp::CppProperty<hesim::stats::loglogistic>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::lognormal>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::lognormal> >(Rcpp::CppProperty<hesim::stats::lognormal>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::lognormal>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::lognormal>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::lognormal> >(Rcpp::CppProperty<hesim::stats::lognormal>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::piecewise_exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::piecewise_exponential> >(Rcpp::CppProperty<hesim::stats::piecewise_exponential>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::piecewise_exponential>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::piecewise_exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::piecewise_exponential> >(Rcpp::CppProperty<hesim::stats::piecewise_exponential>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::point_mass>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::point_mass> >(Rcpp::CppProperty<hesim::stats::point_mass>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::point_mass>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::point_mass>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::point_mass> >(Rcpp::CppProperty<hesim::stats::point_mass>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::survspline>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::survspline> >(Rcpp::CppProperty<hesim::stats::survspline>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::survspline>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::survspline>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::survspline> >(Rcpp::CppProperty<hesim::stats::survspline>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::weibull>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::weibull> >(Rcpp::CppProperty<hesim::stats::weibull>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::weibull>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::weibull>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::weibull> >(Rcpp::CppProperty<hesim::stats::weibull>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::weibull_nma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::weibull_nma> >(Rcpp::CppProperty<hesim::stats::weibull_nma>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::weibull_nma>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::weibull_nma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::weibull_nma> >(Rcpp::CppProperty<hesim::stats::weibull_nma>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::weibull_ph>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::weibull_ph> >(Rcpp::CppProperty<hesim::stats::weibull_ph>*)), false>::XPtr(Rcpp::CppProperty<hesim::stats::weibull_ph>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::CppProperty<hesim::stats::weibull_ph>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::CppProperty<hesim::stats::weibull_ph> >(Rcpp::CppProperty<hesim::stats::weibull_ph>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::Module, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::Module>(Rcpp::Module*)), false>::XPtr(Rcpp::Module*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::Module, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::Module>(Rcpp::Module*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::distribution>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::distribution> >(Rcpp::SignedConstructor<hesim::stats::distribution>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::distribution>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::distribution>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::distribution> >(Rcpp::SignedConstructor<hesim::stats::distribution>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::exponential> >(Rcpp::SignedConstructor<hesim::stats::exponential>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::exponential>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::exponential> >(Rcpp::SignedConstructor<hesim::stats::exponential>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::fracpoly>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::fracpoly> >(Rcpp::SignedConstructor<hesim::stats::fracpoly>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::fracpoly>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::fracpoly>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::fracpoly> >(Rcpp::SignedConstructor<hesim::stats::fracpoly>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::gamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::gamma> >(Rcpp::SignedConstructor<hesim::stats::gamma>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::gamma>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::gamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::gamma> >(Rcpp::SignedConstructor<hesim::stats::gamma>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::gengamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::gengamma> >(Rcpp::SignedConstructor<hesim::stats::gengamma>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::gengamma>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::gengamma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::gengamma> >(Rcpp::SignedConstructor<hesim::stats::gengamma>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::gompertz>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::gompertz> >(Rcpp::SignedConstructor<hesim::stats::gompertz>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::gompertz>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::gompertz>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::gompertz> >(Rcpp::SignedConstructor<hesim::stats::gompertz>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::loglogistic>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::loglogistic> >(Rcpp::SignedConstructor<hesim::stats::loglogistic>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::loglogistic>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::loglogistic>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::loglogistic> >(Rcpp::SignedConstructor<hesim::stats::loglogistic>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::lognormal>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::lognormal> >(Rcpp::SignedConstructor<hesim::stats::lognormal>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::lognormal>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::lognormal>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::lognormal> >(Rcpp::SignedConstructor<hesim::stats::lognormal>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::piecewise_exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::piecewise_exponential> >(Rcpp::SignedConstructor<hesim::stats::piecewise_exponential>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::piecewise_exponential>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::piecewise_exponential>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::piecewise_exponential> >(Rcpp::SignedConstructor<hesim::stats::piecewise_exponential>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::point_mass>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::point_mass> >(Rcpp::SignedConstructor<hesim::stats::point_mass>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::point_mass>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::point_mass>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::point_mass> >(Rcpp::SignedConstructor<hesim::stats::point_mass>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::survspline>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::survspline> >(Rcpp::SignedConstructor<hesim::stats::survspline>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::survspline>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::survspline>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::survspline> >(Rcpp::SignedConstructor<hesim::stats::survspline>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::weibull>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::weibull> >(Rcpp::SignedConstructor<hesim::stats::weibull>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::weibull>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::weibull>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::weibull> >(Rcpp::SignedConstructor<hesim::stats::weibull>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::weibull_nma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::weibull_nma> >(Rcpp::SignedConstructor<hesim::stats::weibull_nma>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::weibull_nma>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::weibull_nma>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::weibull_nma> >(Rcpp::SignedConstructor<hesim::stats::weibull_nma>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::weibull_ph>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::weibull_ph> >(Rcpp::SignedConstructor<hesim::stats::weibull_ph>*)), false>::XPtr(Rcpp::SignedConstructor<hesim::stats::weibull_ph>*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<Rcpp::SignedConstructor<hesim::stats::weibull_ph>, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<Rcpp::SignedConstructor<hesim::stats::weibull_ph> >(Rcpp::SignedConstructor<hesim::stats::weibull_ph>*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::distribution, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::distribution>(hesim::stats::distribution*)), false>::XPtr(hesim::stats::distribution*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::distribution, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::distribution>(hesim::stats::distribution*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::exponential, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::exponential>(hesim::stats::exponential*)), false>::XPtr(hesim::stats::exponential*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::exponential, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::exponential>(hesim::stats::exponential*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::fracpoly, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::fracpoly>(hesim::stats::fracpoly*)), false>::XPtr(hesim::stats::fracpoly*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::fracpoly, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::fracpoly>(hesim::stats::fracpoly*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::gamma, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::gamma>(hesim::stats::gamma*)), false>::XPtr(hesim::stats::gamma*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::gamma, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::gamma>(hesim::stats::gamma*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::gengamma, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::gengamma>(hesim::stats::gengamma*)), false>::XPtr(hesim::stats::gengamma*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::gengamma, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::gengamma>(hesim::stats::gengamma*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::gompertz, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::gompertz>(hesim::stats::gompertz*)), false>::XPtr(hesim::stats::gompertz*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::gompertz, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::gompertz>(hesim::stats::gompertz*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::loglogistic, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::loglogistic>(hesim::stats::loglogistic*)), false>::XPtr(hesim::stats::loglogistic*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::loglogistic, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::loglogistic>(hesim::stats::loglogistic*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::lognormal, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::lognormal>(hesim::stats::lognormal*)), false>::XPtr(hesim::stats::lognormal*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::lognormal, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::lognormal>(hesim::stats::lognormal*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::piecewise_exponential, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::piecewise_exponential>(hesim::stats::piecewise_exponential*)), false>::XPtr(hesim::stats::piecewise_exponential*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::piecewise_exponential, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::piecewise_exponential>(hesim::stats::piecewise_exponential*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::point_mass, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::point_mass>(hesim::stats::point_mass*)), false>::XPtr(hesim::stats::point_mass*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::point_mass, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::point_mass>(hesim::stats::point_mass*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::survspline, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::survspline>(hesim::stats::survspline*)), false>::XPtr(hesim::stats::survspline*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::survspline, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::survspline>(hesim::stats::survspline*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::weibull, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::weibull>(hesim::stats::weibull*)), false>::XPtr(hesim::stats::weibull*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::weibull, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::weibull>(hesim::stats::weibull*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::weibull_nma, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::weibull_nma>(hesim::stats::weibull_nma*)), false>::XPtr(hesim::stats::weibull_nma*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::weibull_nma, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::weibull_nma>(hesim::stats::weibull_nma*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::stats::weibull_ph, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::weibull_ph>(hesim::stats::weibull_ph*)), false>::XPtr(hesim::stats::weibull_ph*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::stats::weibull_ph, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::stats::weibull_ph>(hesim::stats::weibull_ph*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<hesim::time_fun, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::time_fun>(hesim::time_fun*)), false>::XPtr(hesim::time_fun*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<hesim::time_fun, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<hesim::time_fun>(hesim::time_fun*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::distribution>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::distribution>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::distribution>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::distribution>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::distribution>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::distribution>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::distribution>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::distribution>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::distribution>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::distribution>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::distribution>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::distribution>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::distribution>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::distribution>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::exponential>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::exponential>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::exponential>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::exponential>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::exponential>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::exponential>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::exponential>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::fracpoly>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::fracpoly>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::fracpoly>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::fracpoly>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::fracpoly>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::fracpoly>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::fracpoly>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::fracpoly>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::fracpoly>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::fracpoly>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::fracpoly>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::fracpoly>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::fracpoly>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::fracpoly>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gamma>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gamma>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gamma>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gamma>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gamma>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gamma>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gamma>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gengamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gengamma>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gengamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gengamma>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gengamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gengamma>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gengamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gengamma>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gengamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gengamma>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gengamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gengamma>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gengamma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gengamma>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gompertz>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gompertz>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gompertz>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gompertz>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gompertz>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gompertz>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gompertz>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gompertz>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gompertz>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gompertz>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::gompertz>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gompertz>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::gompertz>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::gompertz>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::loglogistic>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::loglogistic>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::loglogistic>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::loglogistic>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::loglogistic>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::loglogistic>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::loglogistic>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::loglogistic>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::loglogistic>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::loglogistic>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::loglogistic>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::loglogistic>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::loglogistic>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::loglogistic>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::lognormal>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::lognormal>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::lognormal>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::lognormal>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::lognormal>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::lognormal>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::lognormal>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::lognormal>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::lognormal>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::lognormal>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::lognormal>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::lognormal>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::lognormal>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::lognormal>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::piecewise_exponential>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::point_mass>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::point_mass>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::point_mass>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::point_mass>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::point_mass>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::point_mass>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::point_mass>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::point_mass>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::point_mass>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::point_mass>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::point_mass>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::point_mass>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::point_mass>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::point_mass>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::survspline>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::survspline>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::survspline>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::survspline>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::survspline>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::survspline>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::survspline>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::survspline>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::survspline>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::survspline>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::survspline>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::survspline>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::survspline>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::survspline>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_nma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_nma>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_nma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_nma>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_nma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_nma>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_nma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_nma>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_nma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_nma>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_nma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_nma>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_nma>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_nma>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_ph>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_ph>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_ph>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_ph>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_ph>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_ph>*> >*)), false>::XPtr(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_ph>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_ph>*> >*, bool, SEXPREC*, SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::XPtr<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_ph>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_ph>*> >, Rcpp::PreserveStorage, &(void Rcpp::standard_delete_finalizer<std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_ph>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_ph>*> > >(std::__1::vector<Rcpp::SignedMethod<hesim::stats::weibull_ph>*, std::__1::allocator<Rcpp::SignedMethod<hesim::stats::weibull_ph>*> >*)), false> >::set__(SEXPREC*) with argument allocated using R_MakeExternalPtr Rcpp/include/Rcpp/XPtr.h:102

Function Rcpp::class_<hesim::stats::distribution>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::exponential>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::fracpoly>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::gamma>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::gengamma>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::gompertz>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::loglogistic>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::lognormal>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::piecewise_exponential>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::point_mass>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::survspline>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::weibull>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::weibull_nma>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<hesim::stats::weibull_ph>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _ZN4Rcpp6VectorILi16ENS_15PreserveStorageEEC2IlEET_PNS_6traits9enable_ifIXsr6traits13is_arithmeticIS4_EE5valueEvE4typeE
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<16, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:125

Function _ZN4Rcpp6VectorILi16ENS_15PreserveStorageEEC2ImEET_PNS_6traits9enable_ifIXsr6traits13is_arithmeticIS4_EE5valueEvE4typeE
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<16, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:125

Function _ZN4Rcpp6VectorILi19ENS_15PreserveStorageEEC2IlEET_PNS_6traits9enable_ifIXsr6traits13is_arithmeticIS4_EE5valueEvE4typeE
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:125

Function _hesim_C_apply_rr
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_ceac
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_cohort_dtstm_sim_stateprobs
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_ctstm_indiv_stateprobs
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_ctstm_sim_disease
  [UP] ignoring variable <unnamed var:   %39 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_ctstm_summary
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_enmbpi
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_incr_effect
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_indiv_ctstm_los
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_indiv_ctstm_starting
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_indiv_ctstm_wlos
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_mce
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_psm_curves_summary
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_psm_sim_stateprobs
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_rcat
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_rdirichlet_mat
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_rgengamma
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_rowmax
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_rowmax_index
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_rpwexp
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_sim_ev
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_sim_los
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_statevals_sim
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_add_constant_double
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_add_constant_int
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_is_absorbing
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_max_lt
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_obs_index
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_obs_index_ids
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_pv
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_rsurv
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_rtrunc_repeat
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_rtruncnorm
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_seq
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_trans_mat_n_trans
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_trans_mat_to
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_trans_mat_trans_id
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_trapz
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_C_test_xptr_test_time_fun
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %13 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_test_cum_riemann_x2
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_test_quad_dnorm
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_test_quad_ier1
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_test_quad_ier4
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_test_quad_ier5
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_test_riemann_x2
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_test_zeroin
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _hesim_tmax_max
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
