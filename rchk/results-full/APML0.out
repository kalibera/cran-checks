Package APML0 version 0.10
Package built using 80081/R 4.1.0; x86_64-pc-linux-gnu; 2021-03-08 14:28:33 UTC; unix   
Checked with rchk version 3d653b7c8f92dac912532856b55f44d2986c6553 LLVM version 10.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::S4_Impl<Rcpp::PreserveStorage>::S4_Impl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] calling allocating function R_do_new_object with argument allocated using R_do_MAKE_CLASS Rcpp/include/Rcpp/S4.h:58

Function Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::SlotProxy::set(SEXPREC*)
  [UP] calling allocating function Rcpp::S4_Impl<Rcpp::PreserveStorage>::operator=(SEXPREC*) with argument allocated using R_do_slot_assign Rcpp/include/Rcpp/proxy/SlotProxy.h:55

Function Rcpp::Vector<13, Rcpp::PreserveStorage>::Vector<Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::SlotProxy>(Rcpp::GenericProxy<Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::SlotProxy> const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<13, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<13>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:80

Function Rcpp::Vector<13, Rcpp::PreserveStorage>::Vector<int const*>(int const*, int const*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<13, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:213

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector<Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::SlotProxy>(Rcpp::GenericProxy<Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::SlotProxy> const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<14>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:80

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector<double const*>(double const*, double const*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:213

Function Rcpp::Vector<16, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<16, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<16>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:74

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function _APML0_EnetCoxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:661
  [PB] has negative depth APML0/src/RcppExports.cpp:673
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:673
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:674

Function _APML0_EnetCoxC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %62 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_EnetLmC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:274
  [PB] has negative depth APML0/src/RcppExports.cpp:286
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:286
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:287

Function _APML0_EnetLmC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %47 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_EnetLogC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:1008
  [PB] has negative depth APML0/src/RcppExports.cpp:1020
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:1020
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:1021

Function _APML0_EnetLogC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %47 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_NetCoxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:771
  [PB] has negative depth APML0/src/RcppExports.cpp:783
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:783
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:784

Function _APML0_NetCoxC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %71 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_NetLmC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:371
  [PB] has negative depth APML0/src/RcppExports.cpp:383
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:383
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:384

Function _APML0_NetLmC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %56 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_NetLogC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:1105
  [PB] has negative depth APML0/src/RcppExports.cpp:1117
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:1117
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:1118

Function _APML0_NetLogC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %56 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_OmegaC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:66
  [PB] has negative depth APML0/src/RcppExports.cpp:78
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:78
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:79

Function _APML0_OmegaC_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_OmegaSC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:101
  [PB] has negative depth APML0/src/RcppExports.cpp:113
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:113
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:114

Function _APML0_OmegaSC_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvEnetCoxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:717
  [PB] has negative depth APML0/src/RcppExports.cpp:729
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:729
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:730

Function _APML0_cvEnetCoxC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %77 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvEnetLmC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:322
  [PB] has negative depth APML0/src/RcppExports.cpp:334
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:334
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:335

Function _APML0_cvEnetLmC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %53 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvEnetLogC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:1056
  [PB] has negative depth APML0/src/RcppExports.cpp:1068
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:1068
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:1069

Function _APML0_cvEnetLogC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %53 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvHardCoxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:610
  [PB] has negative depth APML0/src/RcppExports.cpp:622
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:622
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:623

Function _APML0_cvHardCoxC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %65 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvHardLmC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:228
  [PB] has negative depth APML0/src/RcppExports.cpp:240
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:240
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:241

Function _APML0_cvHardLmC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvHardLogC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:962
  [PB] has negative depth APML0/src/RcppExports.cpp:974
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:974
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:975

Function _APML0_cvHardLogC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %50 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvNetCoxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:830
  [PB] has negative depth APML0/src/RcppExports.cpp:842
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:842
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:843

Function _APML0_cvNetCoxC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %86 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvNetLmC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:422
  [PB] has negative depth APML0/src/RcppExports.cpp:434
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:434
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:435

Function _APML0_cvNetLmC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %62 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvNetLogC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:1156
  [PB] has negative depth APML0/src/RcppExports.cpp:1168
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:1168
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:1169

Function _APML0_cvNetLogC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %62 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvTrimCoxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:558
  [PB] has negative depth APML0/src/RcppExports.cpp:570
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:570
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:571

Function _APML0_cvTrimCoxC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %62 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvTrimLmC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:184
  [PB] has negative depth APML0/src/RcppExports.cpp:196
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:196
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:197

Function _APML0_cvTrimLmC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_cvTrimLogC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:915
  [PB] has negative depth APML0/src/RcppExports.cpp:927
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:927
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:928

Function _APML0_cvTrimLogC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %47 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_maxLambdaCoxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:466
  [PB] has negative depth APML0/src/RcppExports.cpp:478
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:478
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:479

Function _APML0_maxLambdaCoxC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_maxLambdaLmC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:140
  [PB] has negative depth APML0/src/RcppExports.cpp:152
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:152
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:153

Function _APML0_maxLambdaLmC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_maxLambdaLogC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:869
  [PB] has negative depth APML0/src/RcppExports.cpp:881
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:881
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:882

Function _APML0_maxLambdaLogC_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_pletaCm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:507
  [PB] has negative depth APML0/src/RcppExports.cpp:519
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:519
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:520

Function _APML0_pletaCm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %32 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _APML0_scaleC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr APML0/src/RcppExports.cpp:31
  [PB] has negative depth APML0/src/RcppExports.cpp:43
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete APML0/src/RcppExports.cpp:43
  [PB] has possible protection stack imbalance APML0/src/RcppExports.cpp:44

Function _APML0_scaleC_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
