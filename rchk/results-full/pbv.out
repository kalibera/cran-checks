Package pbv version 0.5-47
Package built using 87358/R 4.5.0; x86_64-pc-linux-gnu; 2024-11-21 16:05:27 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _pbv_pbv_rcpp_dbvnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:216
  [PB] has negative depth pbv/src/RcppExports.cpp:228
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:228
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:229

Function _pbv_pbv_rcpp_dbvnorm0
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:179
  [PB] has negative depth pbv/src/RcppExports.cpp:191
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:191
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:192

Function _pbv_pbv_rcpp_dbvnorm0_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_dbvnorm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pbvnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:142
  [PB] has negative depth pbv/src/RcppExports.cpp:154
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:154
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:155

Function _pbv_pbv_rcpp_pbvnorm0
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:106
  [PB] has negative depth pbv/src/RcppExports.cpp:118
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:118
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:119

Function _pbv_pbv_rcpp_pbvnorm0_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pbvnorm_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:70
  [PB] has negative depth pbv/src/RcppExports.cpp:82
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:82
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:83

Function _pbv_pbv_rcpp_pnorm0
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:36
  [PB] has negative depth pbv/src/RcppExports.cpp:48
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:48
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:49

Function _pbv_pbv_rcpp_pnorm0_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pnorm_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
