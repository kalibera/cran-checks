Package RcppBessel version 1.0.0
Package built using 87358/R 4.5.0; x86_64-pc-linux-gnu; 2024-11-21 15:22:37 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _RcppBessel_AiryA
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RcppBessel/src/RcppExports.cpp:224
  [PB] has negative depth RcppBessel/src/RcppExports.cpp:236
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RcppBessel/src/RcppExports.cpp:236
  [PB] has possible protection stack imbalance RcppBessel/src/RcppExports.cpp:237

Function _RcppBessel_AiryA_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RcppBessel_AiryB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RcppBessel/src/RcppExports.cpp:261
  [PB] has negative depth RcppBessel/src/RcppExports.cpp:273
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RcppBessel/src/RcppExports.cpp:273
  [PB] has possible protection stack imbalance RcppBessel/src/RcppExports.cpp:274

Function _RcppBessel_AiryB_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RcppBessel_BesselH
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RcppBessel/src/RcppExports.cpp:187
  [PB] has negative depth RcppBessel/src/RcppExports.cpp:199
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RcppBessel/src/RcppExports.cpp:199
  [PB] has possible protection stack imbalance RcppBessel/src/RcppExports.cpp:200

Function _RcppBessel_BesselH_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RcppBessel_BesselI
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RcppBessel/src/RcppExports.cpp:75
  [PB] has negative depth RcppBessel/src/RcppExports.cpp:87
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RcppBessel/src/RcppExports.cpp:87
  [PB] has possible protection stack imbalance RcppBessel/src/RcppExports.cpp:88

Function _RcppBessel_BesselI_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RcppBessel_BesselJ
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RcppBessel/src/RcppExports.cpp:112
  [PB] has negative depth RcppBessel/src/RcppExports.cpp:124
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RcppBessel/src/RcppExports.cpp:124
  [PB] has possible protection stack imbalance RcppBessel/src/RcppExports.cpp:125

Function _RcppBessel_BesselJ_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RcppBessel_BesselK
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RcppBessel/src/RcppExports.cpp:38
  [PB] has negative depth RcppBessel/src/RcppExports.cpp:50
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RcppBessel/src/RcppExports.cpp:50
  [PB] has possible protection stack imbalance RcppBessel/src/RcppExports.cpp:51

Function _RcppBessel_BesselK_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RcppBessel_BesselY
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RcppBessel/src/RcppExports.cpp:149
  [PB] has negative depth RcppBessel/src/RcppExports.cpp:161
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RcppBessel/src/RcppExports.cpp:161
  [PB] has possible protection stack imbalance RcppBessel/src/RcppExports.cpp:162

Function _RcppBessel_BesselY_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
