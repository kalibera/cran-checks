Package gdalBindings version 0.1.17
Package built using 86189/R 4.4.0; x86_64-pc-linux-gnu; 2024-03-25 22:33:15 UTC; unix   
Checked with rchk version fdc068715daa3a256062cc20e0d4a5157dacc9a4 LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::CppFunction11<GDALDatasetR*, char const*, int, int, char const*, double, double, double, double, std::__1::vector<double, std::__1::allocator<double> >, double, Rcpp::Vector<16, Rcpp::PreserveStorage> >::operator()(SEXPREC**)
  [UP] unprotected variable <unnamed var:   %3 = alloca %struct.SEXPREC*, align 8> while calling allocating function Rcpp::Vector<16, Rcpp::PreserveStorage>::~Vector() Rcpp/include/Rcpp/module/Module_generated_CppFunction.h:1226

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::Rcpp_namespace()
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::Environment_Impl(SEXPREC*) with argument allocated using Rcpp::internal::get_Rcpp_namespace() Rcpp/include/Rcpp/Environment.h:361

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<13, Rcpp::PreserveStorage> GDALRasterBandR::ReadBlock<short, Rcpp::Vector<13, Rcpp::PreserveStorage> >(int, int)
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Vector<13, Rcpp::PreserveStorage> GDALRasterBandR::ReadBlock<unsigned int, Rcpp::Vector<13, Rcpp::PreserveStorage> >(int, int)
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Vector<13, Rcpp::PreserveStorage> GDALRasterBandR::ReadBlock<unsigned short, Rcpp::Vector<13, Rcpp::PreserveStorage> >(int, int)
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Vector<14, Rcpp::PreserveStorage> GDALRasterBandR::ReadBlock<float, Rcpp::Vector<14, Rcpp::PreserveStorage> >(int, int)
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::Vector<24, Rcpp::PreserveStorage> GDALRasterBandR::ReadBlock<unsigned char, Rcpp::Vector<24, Rcpp::PreserveStorage> >(int, int)
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<GDALDatasetR>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::class_<GDALRasterBandR>::invoke(SEXPREC*, SEXPREC*, SEXPREC**, int)
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
