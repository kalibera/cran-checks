Package LearnNonparam version 1.2.9
Package built using 88872/R 4.6.0; x86_64-pc-linux-gnu; 2025-09-27 04:07:26 UTC; unix   
Checked with rchk version 35618ebbccf3cd0b45a3530e6303970a22a9056b LLVM version 14.0.6
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md
For rchk in docker image see https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _LearnNonparam_association_pmt
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LearnNonparam_ksample_pmt
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LearnNonparam_multcomp_pmt
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %31 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LearnNonparam_paired_pmt
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LearnNonparam_rcbd_pmt
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LearnNonparam_table_pmt
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _LearnNonparam_twosample_pmt
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function association_pmt(SEXPREC*, SEXPREC*, SEXPREC*, double, bool)
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable y as it has address taken, results will be incomplete 

Function ksample_pmt(SEXPREC*, SEXPREC*, SEXPREC*, double, bool)
  [UP] ignoring variable group as it has address taken, results will be incomplete 

Function multcomp_pmt(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, double, bool)
  [UP] ignoring variable group as it has address taken, results will be incomplete 

Function paired_pmt(SEXPREC*, SEXPREC*, SEXPREC*, double, bool)
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable y as it has address taken, results will be incomplete 

Function rcbd_pmt(SEXPREC*, SEXPREC*, double, bool)
  [UP] ignoring variable data as it has address taken, results will be incomplete 

Function table_pmt(SEXPREC*, SEXPREC*, SEXPREC*, double, bool)
  [UP] ignoring variable col as it has address taken, results will be incomplete 
  [UP] ignoring variable row as it has address taken, results will be incomplete 

Function twosample_pmt(SEXPREC*, SEXPREC*, SEXPREC*, double, bool)
  [UP] ignoring variable x as it has address taken, results will be incomplete 
  [UP] ignoring variable y as it has address taken, results will be incomplete 
