* installing *source* package ‘mlrMBO’ ...
** package ‘mlrMBO’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
make[1]: Entering directory '/var/scratch2/tomas/tmp/RtmplJ0UZ0/R.INSTALLc18d5779c0f5/mlrMBO/src'
gcc -I"/var/scratch2/tomas/cran/rcnst/build/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2  -c avl.c -o avl.o
gcc -I"/var/scratch2/tomas/cran/rcnst/build/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2  -c hv.c -o hv.o
gcc -I"/var/scratch2/tomas/cran/rcnst/build/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2  -c infill.c -o infill.o
gcc -I"/var/scratch2/tomas/cran/rcnst/build/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2  -c init.c -o init.o
gcc -shared -L/usr/local/lib64 -o mlrMBO.so avl.o hv.o infill.o init.o
make[1]: Leaving directory '/var/scratch2/tomas/tmp/RtmplJ0UZ0/R.INSTALLc18d5779c0f5/mlrMBO/src'
installing to /var/scratch2/tomas/cran/rcnst/lib/00LOCK-mlrMBO/00new/mlrMBO/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (mlrMBO)
