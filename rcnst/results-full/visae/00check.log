* using log directory ‘/var/scratch2/tomas/cran/rcnst/check/visae.Rcheck’
* using R Under development (unstable) (2021-03-04 r80063)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* checking for file ‘visae/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘visae’ version ‘0.1.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘visae’ can be installed ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ... ERROR
Running examples in ‘visae-Ex.R’ failed
The error most likely occurred in:

> ### Name: ca_ae
> ### Title: Correspondence Analysis of Adverse Events
> ### Aliases: ca_ae
> 
> ### ** Examples
> 
> library(magrittr)
> library(dplyr)
> 
> id <- rep(1:50, each = 2)
> group <- c(rep("A", 50), rep("B", 50))
> ae_grade <- sample(1:5, size = 100, replace = TRUE)
> ae_domain <- sample(c("D", "E"), size = 100, replace = TRUE)
> ae_term <- sample(c("F", "G", "H", "I"), size = 100, replace = TRUE)
> df <- tibble(id = id, trt = group,
+             ae_g = ae_grade, ae_d = ae_domain, ae_t = ae_term)
> test <- df %>% ca_ae(., id = id, group = trt, ae = ae_g, label = "AE",
+                     contr_indicator = TRUE, mass_indicator = TRUE,
+                     contr_threshold = 0.01, mass_threshold = 0.01)
ERROR: modification of compiler constant of type integer, length 1
ERROR: the modified value of the constant is:
[1] 5
ERROR: the original value of the constant is:
[1] 1
ERROR: the modified constant is at index 12
ERROR: the modified constant is in this function body:
{
    cols <- enquo(cols)
    if (.top_level) {
        mask$set_current_group(1L)
    }
    else {
        cols <- quo_set_env(cols, data_mask_top(quo_get_env(cols), 
            recursive = FALSE, inherit = TRUE))
    }
    vars <- tidyselect::eval_select(cols, data = mask$across_cols())
    vars <- names(vars)
    if (is.null(fns)) {
        if (!is.null(names)) {
            glue_mask <- across_glue_mask(.caller_env, .col = vars, 
                .fn = "1")
            names <- vec_as_names(glue(names, .envir = glue_mask), 
                repair = "check_unique")
        }
        value <- list(vars = vars, fns = fns, names = names)
        return(value)
    }
    if (is.function(fns) || is_formula(fns)) {
        names <- names %||% "{.col}"
        fns <- list(`1` = fns)
    }
    else {
        names <- names %||% "{.col}_{.fn}"
    }
    if (!is.list(fns)) {
        abort(c("Problem with `across()` input `.fns`.", i = "Input `.fns` must be NULL, a function, a formula, or a list of functions/formulas."))
    }
    expr_protect <- function(x) {
        call2(quote, x)
    }
    fns <- map(fns, function(fn) {
        if (is_formula(fn) && .top_level) {
            f_rhs(fn) <- call2(quote(rlang::eval_tidy), expr_protect(f_rhs(fn)), 
                data = mask$get_rlang_mask())
        }
        fn <- as_function(fn)
        fn
    })
    if (is.null(names(fns))) {
        names_fns <- seq_along(fns)
    }
    else {
        names_fns <- names(fns)
        empties <- which(names_fns == "")
        if (length(empties)) {
            names_fns[empties] <- empties
        }
    }
    glue_mask <- glue_mask <- across_glue_mask(.caller_env, .col = rep(vars, 
        each = length(fns)), .fn = rep(names_fns, length(vars)))
    names <- vec_as_names(glue(names, .envir = glue_mask), repair = "check_unique")
    list(vars = vars, fns = fns, names = names)
}
Function across_setup_impl in namespace dplyr has this body.
Fatal error: compiler constants were modified!

* checking PDF version of manual ... OK
* DONE
Status: 1 ERROR
