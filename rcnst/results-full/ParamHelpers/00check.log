* using log directory ‘/var/scratch2/tomas/cran/rcnst/check/ParamHelpers.Rcheck’
* using R Under development (unstable) (2025-02-23 r87798)
* using platform: x86_64-pc-linux-gnu
* R was compiled by
    gcc (GCC) 14.2.1 20240912 (Red Hat 14.2.1-3)
    GNU Fortran (GCC) 14.2.1 20240912 (Red Hat 14.2.1-3)
* running under: Fedora Linux 40 (MATE-Compiz)
* using session charset: UTF-8
* checking for file ‘ParamHelpers/DESCRIPTION’ ... OK
* this is package ‘ParamHelpers’ version ‘1.14.2’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘ParamHelpers’ can be installed ... OK
* used C compiler: ‘gcc (GCC) 14.2.1 20240912 (Red Hat 14.2.1-3)’
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking code files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking whether startup messages can be suppressed ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking compiled code ... NOTE
Note: information on .o files is not available
* checking examples ... ERROR
Running examples in ‘ParamHelpers-Ex.R’ failed
The error most likely occurred in:

> ### Name: getOptPathBestIndex
> ### Title: Get index of the best element from optimization path.
> ### Aliases: getOptPathBestIndex
> 
> ### ** Examples
> 
> ps = makeParamSet(makeNumericParam("x"))
> op = makeOptPathDF(par.set = ps, y.names = "y", minimize = TRUE)
> addOptPathEl(op, x = list(x = 1), y = 5)
ERROR: modification of compiler constant of type character, length 2
ERROR: the modified value of the constant is:
[1] "integer"       "integervector"
attr(,".match.hash")
<hash table>
ERROR: the original value of the constant is:
[1] "integer"       "integervector"
ERROR: the modified constant is at index 1
ERROR: the modified constant is in this function body:
c("integer", "integervector")
Fatal error: compiler constants were modified!

* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ... ERROR
  Running ‘run-all.R’
Running the tests in ‘tests/run-all.R’ failed.
Last 13 lines of output:
    4.       └─testthat:::test_files_parallel(...)
    5.         ├─withr::with_dir(...)
    6.         │ └─base::force(code)
    7.         ├─testthat::with_reporter(...)
    8.         │ └─base::tryCatch(...)
    9.         │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
   10.         │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
   11.         │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
   12.         └─testthat:::parallel_event_loop_chunky(queue, reporters, ".")
   13.           └─queue$poll(Inf)
   14.             └─base::lapply(...)
   15.               └─testthat (local) FUN(X[[i]], ...)
   16.                 └─private$handle_error(msg, i)
   17.                   └─rlang::abort(...)
  Execution halted
* checking PDF version of manual ... OK
* DONE
Status: 2 ERRORs, 1 NOTE
